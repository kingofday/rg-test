{"version":3,"file":"static/js/95.879654c9.chunk.js","mappings":"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","sources":["components/panel/organizationLevelManagement/EntryForm.tsx","components/panel/organizationLevelManagement/index.tsx","context/AdminPageContext.tsx","components/panel/shared/cells/EditAction.tsx","components/panel/shared/EntryFromModal.tsx","components/panel/shared/cells/DeleteAction.tsx","components/panel/shared/AdminPage.tsx","components/panel/shared/ConfirmModal.tsx"],"sourcesContent":["import { Form as AntForm, Col, Input, Row, Select } from \"antd\";\r\nimport addreses from \"config/api/addresses\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { TOrganizationLevelSummary } from \"models/organizationLevel\";\r\nimport { useTranslation } from \"react-i18next\";\r\ninterface IEntryForm {\r\n  data: any;\r\n  form: any;\r\n}\r\nconst EntryForm = ({ data, form: entryFrm }: IEntryForm) => {\r\n  const { t } = useTranslation();\r\n  const [, gettingLevels, levels] = useApi<TOrganizationLevelSummary, any[]>({\r\n    autoCallUrl: addreses.organizationLevel.tree,\r\n    cachingLifeTimeInSeconds: 60,\r\n    mapper: (data) => {\r\n      const result: any[] = [];\r\n      const iterator = (item: TOrganizationLevelSummary) => {\r\n        result.push(item);\r\n        if (item.nodes && item.nodes.length) {\r\n          item.nodes.forEach((i) =>\r\n            iterator({\r\n              ...i,\r\n              name: `${item.name}/${i.name}`,\r\n            })\r\n          );\r\n        }\r\n      };\r\n      if (data) iterator(data);\r\n      return result;\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <AntForm.Item noStyle name=\"id\">\r\n        <Input type=\"hidden\" />\r\n      </AntForm.Item>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <AntForm.Item\r\n            name=\"name\"\r\n            label={t(\"name\")}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"required\") ?? \"\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder={t(\"name\") ?? \"\"} />\r\n          </AntForm.Item>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <AntForm.Item\r\n            name=\"parentId\"\r\n            label={t(\"parent\")}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"required\") ?? \"\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              allowClear\r\n              placeholder={t(\"parent\")}\r\n              options={(levels as any[])?.map((l) => ({\r\n                label: l.name,\r\n                value: l.id,\r\n              }))}\r\n              loading={gettingLevels}\r\n            />\r\n          </AntForm.Item>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default EntryForm;\r\n","import { Col, Form, Input, Row } from \"antd\";\r\nimport AdminPage from \"components/panel/shared/AdminPage\";\r\nimport addreses from \"config/api/addresses\";\r\nimport { TRoleSummary } from \"models/role\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport EntryForm from \"./EntryForm\";\r\nimport { TOrganizationLevelSummary } from \"models/organizationLevel\";\r\n\r\nconst RoleManagement = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <AdminPage<TOrganizationLevelSummary>\r\n        title={t(\"organizationLevel\")}\r\n        id=\"organizationLevel\"\r\n        idProp=\"id\"\r\n        EntryForm={EntryForm}\r\n        filterUrl={addreses.organizationLevel.list}\r\n        findUrl={(record) => addreses.organizationLevel.find(record.id)}\r\n        columns={[\r\n          {\r\n            title: t(\"name\"),\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n          }\r\n        ]}\r\n        scrollX={300}\r\n        deleteAction={{\r\n          url: (record) => addreses.organizationLevel.delete(record.id),\r\n        }}\r\n        addUrl={addreses.organizationLevel.add}\r\n        editAction={{\r\n          url: addreses.organizationLevel.update,\r\n        }}\r\n      >\r\n        <Row gutter={[20, 20]}>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item name=\"filter\" rules={[]}>\r\n              <Input placeholder={t(\"search\") ?? \"\"} />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </AdminPage>\r\n    </>\r\n  );\r\n};\r\nexport default RoleManagement;\r\n","import { FormInstance } from \"antd\";\r\nimport { createContext } from \"react\";\r\nconst AdminPageContext = createContext<{\r\n    form?: FormInstance\r\n}>({});\r\nexport default AdminPageContext;","import { Button } from \"antd\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IEditAction {\r\n  findUrl?: string | ((record: any) => string);\r\n  record: any;\r\n  idProp: string;\r\n  afterSelect: (record: any) => void;\r\n  isMobile?: boolean;\r\n}\r\nconst EditAction = (props: IEditAction) => {\r\n  const { t } = useTranslation();\r\n  const [find, finding] = useApi<any>({\r\n    onSuccess: (res) => {\r\n      props.afterSelect(res);\r\n    },\r\n  });\r\n  const onClick = () => {\r\n    if (props.findUrl) {\r\n      const url =\r\n        typeof props.findUrl === \"string\"\r\n          ? `${props.findUrl}?${props.idProp}=${\r\n              props.record[props.idProp as keyof typeof props.record]\r\n            }`\r\n          : props.findUrl(props.record);\r\n      find.get(url);\r\n    } else {\r\n      props.afterSelect(props.record);\r\n    }\r\n  };\r\n  return (\r\n    <Button\r\n      loading={finding}\r\n      type={props.isMobile ? \"ghost\" : \"primary\"}\r\n      shape={props.isMobile ? \"default\" : \"circle\"}\r\n      icon={\r\n        props.isMobile?undefined:<CustomIcon size={props.isMobile ? 20 : 10} name=\"IoPencilOutline\" />\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {props.isMobile ? t(\"edit\") : null}\r\n    </Button>\r\n  );\r\n};\r\nexport default EditAction;\r\n","import { Form, Modal } from \"antd\";\r\nimport { ElementType } from \"react\";\r\ninterface IEntryForm<T> {\r\n  onCancel: () => void;\r\n  title: string;\r\n  entryModalWidth?: number;\r\n  initialValues?: any;\r\n  loading?: boolean;\r\n  EntryForm: ElementType;\r\n  onEntrySubmit?: (values: T) => void;\r\n}\r\nconst EntryFormModal = <T,>(props: IEntryForm<T>) => {\r\n  const [entryFrm] = Form.useForm();\r\n  const onOk = () => {\r\n    entryFrm.submit();\r\n  };\r\n  return (\r\n    <Modal\r\n      destroyOnClose\r\n      open={true}\r\n      onCancel={props.onCancel}\r\n      title={props.title}\r\n      onOk={onOk}\r\n      okButtonProps={{ loading: props.loading }}\r\n      width={props.entryModalWidth}\r\n    >\r\n      <Form\r\n        id=\"entry-form\"\r\n        layout=\"vertical\"\r\n        form={entryFrm}\r\n        initialValues={props.initialValues}\r\n        onFinish={props.onEntrySubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <props.EntryForm form={entryFrm} data={props.initialValues} />\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default EntryFormModal;\r\n","import { Button } from \"antd\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IEditAction {\r\n  onClick: () => void;\r\n  isMobile?: boolean;\r\n}\r\nconst DeleteAction = (props: IEditAction) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Button\r\n      danger\r\n      type={props.isMobile ? \"ghost\" : \"primary\"}\r\n      shape={props.isMobile ? \"default\" : \"circle\"}\r\n      icon={\r\n        props.isMobile?undefined:<CustomIcon size={props.isMobile ? 20 : 10} name=\"IoTrashOutline\" />\r\n      }\r\n      onClick={props.onClick}\r\n    >\r\n      {props.isMobile ? t(\"delete\") : null}\r\n    </Button>\r\n  );\r\n};\r\nexport default DeleteAction;\r\n","import { Button, Collapse, Dropdown, Form, Modal, Space, Table } from \"antd\";\r\nimport type {\r\n  ColumnType,\r\n  ColumnsType,\r\n  TablePaginationConfig,\r\n} from \"antd/es/table\";\r\nimport type { FilterValue, SorterResult } from \"antd/es/table/interface\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport config from \"config\";\r\nimport util from \"config/utils\";\r\nimport AdminPageContext from \"context/AdminPageContext\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { PagedData, PagedListUpdater } from \"models\";\r\nimport {\r\n  CSSProperties,\r\n  ElementType,\r\n  MouseEvent,\r\n  ReactNode,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DeleteConfirmModal from \"./ConfirmModal\";\r\nimport Page from \"./Page\";\r\nimport EditAction from \"./cells/EditAction\";\r\nimport EntryFormModal from \"./EntryFromModal\";\r\nimport DeleteAction from \"./cells/DeleteAction\";\r\n\r\nconst { Panel } = Collapse;\r\ninterface DeleteAction {\r\n  icon?: string;\r\n  url: string | ((record: any) => string);\r\n  confirmMessage?: string;\r\n  sendingProp?: string;\r\n}\r\ntype EditAction = {\r\n  icon?: string;\r\n  url: string;\r\n};\r\ninterface ActionColumn<T> {\r\n  icon?: string;\r\n  renderer?: (\r\n    text: string,\r\n    record: T,\r\n    setData: PagedListUpdater<T>,\r\n    isMobile?: boolean\r\n  ) => ReactNode;\r\n  action?: (record: T, setData: PagedListUpdater<T>) => void;\r\n}\r\ninterface AdminPageProps<T> {\r\n  title: string;\r\n  id?: string;\r\n  idProp: string;\r\n  children: ReactNode;\r\n  EntryForm?: ElementType;\r\n  filterUrl: string;\r\n  addUrl?: string;\r\n  findUrl?: string | ((record: T) => string);\r\n  columns: ColumnsType<T>;\r\n  disablePaging?: boolean;\r\n  pageSize?: number;\r\n  initialValues?: any;\r\n  deleteAction?: DeleteAction;\r\n  editAction?: EditAction;\r\n  handleSubmit?: boolean;\r\n  checkIsMerchant?: boolean;\r\n  enableRowNumber?: boolean;\r\n  buttons?: {\r\n    onClick: (e: MouseEvent<HTMLElement>, data: any) => void;\r\n    className?: string;\r\n    loading?: boolean;\r\n    children: ReactNode;\r\n    style?: CSSProperties;\r\n    type?: \"default\" | \"link\" | \"text\" | \"ghost\" | \"primary\" | \"dashed\";\r\n  }[];\r\n  customActions?: ActionColumn<T>[];\r\n  scrollX?: string | number;\r\n  filtersHeight?: number;\r\n  scrollY?: number;\r\n  entryModalWidth?: number;\r\n}\r\n\r\nconst AdminPage = <DataType extends Object>({\r\n  id,\r\n  title,\r\n  columns,\r\n  idProp,\r\n  filterUrl,\r\n  findUrl,\r\n  addUrl,\r\n  initialValues,\r\n  disablePaging,\r\n  EntryForm,\r\n  children,\r\n  deleteAction,\r\n  editAction,\r\n  pageSize = 15,\r\n  handleSubmit = true,\r\n  customActions,\r\n  buttons,\r\n  scrollX = \"1500px\",\r\n  filtersHeight,\r\n  scrollY,\r\n  entryModalWidth,\r\n  enableRowNumber = true,\r\n}: AdminPageProps<DataType>) => {\r\n  const { t } = useTranslation();\r\n  const [filterFrm] = Form.useForm();\r\n\r\n  const [modal, toggleModal] = useState(false);\r\n  const [collapsed, toggleCollapsed] = useState(true);\r\n  const [selected, select] = useState<DataType | null>(null);\r\n  const [recordForRemove, toggleConfirmModal] = useState<DataType | null>(null);\r\n  const [innerColumns, setInnerColumns] = useState(columns);\r\n  const [paging, setPaging] = useState({\r\n    page: 1,\r\n    pageSize: pageSize,\r\n  });\r\n  const pn = useRef<number>(1);\r\n  const [filter, loading, data, setData] = useApi<PagedData<DataType>>({\r\n    initLoading: true,\r\n  });\r\n  const [edit, editing] = useApi<any>({\r\n    onSuccess: (_, params) => {\r\n      onEditSuccess(params);\r\n    },\r\n  });\r\n  const [add, adding] = useApi<any>({\r\n    onSuccess: (newItem) => {\r\n      onAddSuccess(newItem);\r\n    },\r\n  });\r\n  const [del, deleting] = useApi<boolean>({\r\n    onSuccess: (res, params) => {\r\n      let prop = idProp as keyof DataType;\r\n      let id = params?.[prop];\r\n      if (id)\r\n        setData(\r\n          (s) =>\r\n            ({\r\n              ...s,\r\n              totalEntitiesCount: s?.totalEntitiesCount ?? 1 - 1,\r\n              results: s?.results.filter((x) => x[prop] !== id),\r\n            } as PagedData<DataType>)\r\n        );\r\n      toggleConfirmModal(null);\r\n    },\r\n  });\r\n  const isMobile = useMemo(() => window.outerWidth < config.breakpoints.xl, []);\r\n  const onEditSuccess = (params: any, closeModal: boolean = true) => {\r\n    let prop = idProp as keyof DataType;\r\n    let id = params?.[prop];\r\n    if (id)\r\n      setData(\r\n        (s) =>\r\n          ({\r\n            ...s,\r\n            results: s?.results.map((x) =>\r\n              x[prop] === id\r\n                ? {\r\n                    ...x,\r\n                    ...params,\r\n                  }\r\n                : x\r\n            ),\r\n          } as PagedData<DataType>)\r\n      );\r\n    if (closeModal) toggleModal(false);\r\n  };\r\n  const onAddSuccess = (newItem: DataType, closeModal: boolean = true) => {\r\n    let prop = idProp as keyof DataType;\r\n    let id = newItem?.[prop];\r\n    if (id)\r\n      setData(\r\n        (s) =>\r\n          ({\r\n            ...s,\r\n            totalEntitiesCount: s?.totalEntitiesCount ?? 0 + 1,\r\n            results: [newItem, ...(s?.results ?? [])],\r\n          } as PagedData<DataType>)\r\n      );\r\n    if (closeModal) toggleModal(false);\r\n  };\r\n  const onEdit = (record: DataType) => {\r\n    select(record);\r\n    toggleModal(true);\r\n  };\r\n  const onDelete = (record: DataType) => {\r\n    toggleConfirmModal(record);\r\n  };\r\n  const handleDelete = () => {\r\n    if (!!recordForRemove && !!deleteAction) {\r\n      if (\r\n        typeof deleteAction?.url !== \"string\" &&\r\n        ~deleteAction?.url(recordForRemove).indexOf(\"?\")\r\n      ) {\r\n        throw new Error(\"delete url cannot have query strings\");\r\n      }\r\n      const url =\r\n        typeof deleteAction?.url === \"string\"\r\n          ? `${deleteAction.url}`\r\n          : deleteAction?.url(recordForRemove);\r\n      del.delete(url, {\r\n        [deleteAction?.sendingProp ?? idProp]:\r\n          recordForRemove[\r\n            (deleteAction?.sendingProp ?? idProp) as keyof DataType\r\n          ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const actionsCol = useMemo((): ColumnType<DataType> | null => {\r\n    if (\r\n      (!customActions || !customActions.length) &&\r\n      !editAction &&\r\n      !deleteAction\r\n    )\r\n      return null;\r\n    const count =\r\n      (customActions?.length ?? 0) +\r\n      (!!editAction ? 1 : 0) +\r\n      (!!deleteAction ? 1 : 0);\r\n    return {\r\n      title: <CustomIcon name=\"IoBuildOutline\" />,\r\n      align: \"center\",\r\n      key: \"actions\",\r\n      fixed: \"right\",\r\n      width: isMobile ? 30 : count * 25 + 8 * (count - 1) + 40,\r\n      dataIndex: \"actions\",\r\n      render: function (text, record, index) {\r\n        if (isMobile) {\r\n          let items: any[] = [];\r\n          if (!!editAction) {\r\n            items.push({\r\n              key: \"edit\",\r\n              label: (\r\n                <EditAction\r\n                  findUrl={findUrl}\r\n                  afterSelect={onEdit}\r\n                  idProp={idProp}\r\n                  record={record}\r\n                  isMobile\r\n                />\r\n              ),\r\n            });\r\n          }\r\n          if (!!deleteAction) {\r\n            items.push({\r\n              key: \"delete\",\r\n              label: <DeleteAction isMobile onClick={() => onDelete(record)} />,\r\n            });\r\n          }\r\n          if (customActions?.length) {\r\n            items = items.concat(\r\n              customActions.map((x, idx) => ({\r\n                key: \"action-\" + idx,\r\n                label: x.renderer ? (\r\n                  x.renderer(text, record, setData, isMobile)\r\n                ) : (\r\n                  <Button\r\n                    key={idx}\r\n                    type={isMobile ? \"ghost\" : \"primary\"}\r\n                    shape={isMobile ? \"default\" : \"circle\"}\r\n                    icon={\r\n                      <CustomIcon\r\n                        size={isMobile ? 20 : 10}\r\n                        name={x.icon ?? \"BsDash\"}\r\n                      />\r\n                    }\r\n                    onClick={() => x.action?.(record, setData)}\r\n                  />\r\n                ),\r\n              }))\r\n            );\r\n          }\r\n          return (\r\n            <Dropdown menu={{ items }}>\r\n              <a onClick={(e) => e.preventDefault()}>\r\n                <CustomIcon name=\"FaEllipsisV\" />\r\n              </a>\r\n            </Dropdown>\r\n          );\r\n        }\r\n        return (\r\n          <Space className=\"actions\">\r\n            {!!editAction && (\r\n              <EditAction\r\n                findUrl={findUrl}\r\n                afterSelect={onEdit}\r\n                idProp={idProp}\r\n                record={record}\r\n              />\r\n            )}\r\n            {!!deleteAction && (\r\n              <DeleteAction onClick={() => onDelete(record)} />\r\n            )}\r\n            {!!customActions &&\r\n              customActions.map((x, idx) =>\r\n                x.renderer ? (\r\n                  x.renderer(text, record, setData)\r\n                ) : (\r\n                  <Button\r\n                    key={idx}\r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    icon={<CustomIcon size={10} name={x.icon ?? \"BsDash\"} />}\r\n                    onClick={() => x.action?.(record, setData)}\r\n                  />\r\n                )\r\n              )}\r\n          </Space>\r\n        );\r\n      },\r\n    };\r\n  }, [customActions]);\r\n\r\n  const onAdd = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    select(null);\r\n    toggleModal(true);\r\n  };\r\n  const getData = (data: any) => {\r\n    filter.get(\r\n      `${filterUrl}?${util\r\n        .convertToQueryString({ ...paging, ...data })\r\n        .toString()}`\r\n    );\r\n  };\r\n  const onFilter = (data: any) => {\r\n    setPaging((x) => ({ ...x, page: 1 }));\r\n    pn.current = 1;\r\n    if (\r\n      columns.length !== innerColumns.length ||\r\n      columns.some((x) => !innerColumns.map((i) => i.key).includes(x.key))\r\n    ) {\r\n      setInnerColumns(columns);\r\n    }\r\n    getData({ ...data, page: 1 });\r\n  };\r\n  const onEntrySubmit = (record: DataType) => {\r\n    if (editAction && selected) edit.put(editAction.url, record);\r\n    else if (addUrl && !selected) add.post(addUrl, record);\r\n  };\r\n  const onTableChange = (\r\n    pagination: TablePaginationConfig,\r\n    filters: Record<string, FilterValue | null>,\r\n    sorter: SorterResult<DataType> | SorterResult<DataType>[]\r\n  ) => {\r\n    setPaging({\r\n      page: pagination.current ?? 1,\r\n      pageSize: pagination.pageSize ?? 15,\r\n    });\r\n    pn.current = pagination.current ?? 1;\r\n    getData({\r\n      ...filterFrm.getFieldsValue(),\r\n      page: pagination.current ?? 1,\r\n    });\r\n  };\r\n  const onCancel = () => {\r\n    select(null);\r\n    toggleModal(false);\r\n  };\r\n  useEffect(() => {\r\n    getData(filterFrm.getFieldsValue());\r\n  }, []);\r\n  const columnsList = useMemo(() => {\r\n    let list = actionsCol\r\n      ? [\r\n          ...innerColumns\r\n            .filter((x) => x.key !== \"rowNumber\")\r\n            .map((c) => ({\r\n              ...c,\r\n              fixed:\r\n                window.outerWidth < config.breakpoints.lg ? undefined : c.fixed,\r\n            })),\r\n          actionsCol,\r\n        ]\r\n      : innerColumns.filter((x) => x.key !== \"rowNumber\");\r\n    if (enableRowNumber) {\r\n      list.unshift({\r\n        key: \"rowNumber\",\r\n        title: \"#\",\r\n        width: 80,\r\n        fixed: window.outerWidth < config.breakpoints.lg ? undefined : \"left\",\r\n        render: (value, record, index) => {\r\n          return <span>{(pn.current - 1) * paging.pageSize + index + 1}</span>;\r\n        },\r\n      });\r\n    }\r\n    return list;\r\n  }, [innerColumns]);\r\n  return (\r\n    <AdminPageContext.Provider value={{ form: filterFrm }}>\r\n      <Page id={id} title={title} className=\"admin\">\r\n        <Collapse\r\n          defaultActiveKey={[\"filters\"]}\r\n          onChange={() => toggleCollapsed((s) => !s)}\r\n          //onChange={onChange}\r\n          //expandIconPosition={expandIconPosition}\r\n        >\r\n          <Panel\r\n            header={t(\"filters\")}\r\n            key=\"filters\"\r\n            extra={\r\n              !addUrl ? null : (\r\n                <Button\r\n                  icon={<CustomIcon name=\"IoAdd\" />}\r\n                  onClick={onAdd}\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  title={t(\"add\") ?? \"\"}\r\n                >\r\n                  <small>{t(\"add\")}</small>\r\n                </Button>\r\n              )\r\n            }\r\n          >\r\n            <Form\r\n              name=\"filters\"\r\n              form={filterFrm}\r\n              initialValues={initialValues}\r\n              onFinish={onFilter}\r\n              autoComplete=\"off\"\r\n            >\r\n              {children}\r\n              <Form.Item className=\"flex-row-end btns\">\r\n                {buttons?.map((x) => (\r\n                  <Button\r\n                    type={\"primary\" ?? x.type}\r\n                    htmlType=\"button\"\r\n                    style={x.style}\r\n                    className={x.className}\r\n                    onClick={(e) => x.onClick(e, filterFrm.getFieldsValue())}\r\n                  >\r\n                    {x.children}\r\n                  </Button>\r\n                ))}\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {t(\"filter\")}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Panel>\r\n        </Collapse>\r\n        <Table\r\n          loading={loading}\r\n          direction=\"rtl\"\r\n          rowKey={idProp}\r\n          key={`table-${idProp}`}\r\n          columns={columnsList}\r\n          dataSource={data === null ? undefined : [...data.results]}\r\n          onChange={onTableChange}\r\n          scroll={{\r\n            x: scrollX,\r\n            y: scrollY\r\n              ? scrollY + (collapsed ? 0 : filtersHeight ?? 0)\r\n              : scrollY,\r\n          }}\r\n          pagination={\r\n            disablePaging\r\n              ? undefined\r\n              : {\r\n                  pageSize: paging.pageSize,\r\n                  current: paging.page,\r\n                  total: data?.totalEntitiesCount,\r\n                }\r\n          }\r\n        />\r\n        {!!EntryForm &&\r\n          (handleSubmit ? (\r\n            modal ? (\r\n              <EntryFormModal<DataType>\r\n                EntryForm={EntryForm}\r\n                onCancel={onCancel}\r\n                onEntrySubmit={onEntrySubmit}\r\n                entryModalWidth={entryModalWidth}\r\n                title={selected ? t(\"edit\") : t(\"add\")}\r\n                initialValues={selected ?? undefined}\r\n                loading={adding || editing}\r\n              />\r\n            ) : null\r\n          ) : modal ? (\r\n            <Modal\r\n              destroyOnClose\r\n              open={true}\r\n              onCancel={onCancel}\r\n              title={selected ? t(\"edit\") : t(\"add\")}\r\n              footer={null}\r\n              width={entryModalWidth}\r\n            >\r\n              <EntryForm\r\n                onCancel={() => toggleModal(false)}\r\n                data={selected}\r\n                onSuccess={selected ? onEditSuccess : onAddSuccess}\r\n              />\r\n            </Modal>\r\n          ) : null)}\r\n        <DeleteConfirmModal\r\n          open={!!recordForRemove}\r\n          loading={deleting}\r\n          onOk={handleDelete}\r\n          onCancel={() => toggleConfirmModal(null)}\r\n        />\r\n      </Page>\r\n    </AdminPageContext.Provider>\r\n  );\r\n};\r\nexport default AdminPage;\r\n","import { Modal, Typography } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst { Paragraph } = Typography;\r\ninterface DeleteConfirmProps {\r\n    loading?: boolean;\r\n    title?:string;\r\n    message?: string;\r\n    open: boolean;\r\n    onOk: () => void;\r\n    onCancel: () => void;\r\n}\r\nconst ConfirmModal = ({ open, onOk, loading, onCancel,title, message }: DeleteConfirmProps) => {\r\n    const { t } = useTranslation();\r\n    return <Modal\r\n        title={title??t(\"delete\")}\r\n        open={open}\r\n        onOk={onOk}\r\n        onCancel={onCancel}\r\n        okButtonProps={{ danger: true, loading }}>\r\n        <Paragraph>{message ? message : t(\"areYouSure\")}</Paragraph>\r\n    </Modal>\r\n}\r\nexport default ConfirmModal;"],"names":["data","form","t","useTranslation","useApi","autoCallUrl","addreses","cachingLifeTimeInSeconds","mapper","result","iterator","item","push","nodes","length","forEach","i","name","gettingLevels","levels","noStyle","type","gutter","xs","sm","md","label","rules","required","message","placeholder","allowClear","options","map","l","value","id","loading","AdminPage","title","idProp","EntryForm","filterUrl","findUrl","record","columns","dataIndex","key","scrollX","deleteAction","url","addUrl","editAction","createContext","props","onSuccess","res","afterSelect","find","finding","isMobile","shape","icon","undefined","CustomIcon","size","onClick","get","Form","entryFrm","destroyOnClose","open","onCancel","onOk","submit","okButtonProps","width","entryModalWidth","layout","initialValues","onFinish","onEntrySubmit","autoComplete","danger","Panel","Collapse","disablePaging","children","pageSize","handleSubmit","customActions","buttons","filtersHeight","scrollY","enableRowNumber","filterFrm","useState","modal","toggleModal","collapsed","toggleCollapsed","selected","select","recordForRemove","toggleConfirmModal","innerColumns","setInnerColumns","page","paging","setPaging","pn","useRef","initLoading","filter","setData","_","params","onEditSuccess","edit","editing","newItem","onAddSuccess","add","adding","prop","s","totalEntitiesCount","results","x","del","deleting","useMemo","window","outerWidth","config","closeModal","onEdit","onDelete","actionsCol","count","align","fixed","render","text","index","items","concat","idx","renderer","action","menu","e","preventDefault","className","getData","util","toString","useEffect","getFieldsValue","columnsList","list","c","unshift","current","Page","defaultActiveKey","onChange","header","extra","stopPropagation","some","includes","htmlType","style","direction","rowKey","dataSource","pagination","filters","sorter","scroll","y","total","put","post","footer","indexOf","Error","delete","sendingProp","Paragraph","Typography"],"sourceRoot":""}