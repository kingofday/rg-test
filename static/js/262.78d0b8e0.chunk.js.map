{"version":3,"file":"static/js/262.78d0b8e0.chunk.js","mappings":"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","sources":["models/auth.ts","components/auth/Login.tsx","components/shared/CustomIcon.tsx","config/api/addresses.ts","config/patterns.ts","config/api/index.ts","hooks/useApi.ts"],"sourcesContent":["export enum ClaimTypes {\r\n  Permission = \"Permission\",\r\n  FullName = \"FullName\",\r\n  NationalCode = \"NationalCode\",\r\n  PhoneNumber = \"PhoneNumber\",\r\n}\r\nexport type TLoginResponse = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  claims: {\r\n    type: ClaimTypes;\r\n    value: string;\r\n  }[];\r\n};\r\n","import { useState, useRef, useContext } from \"react\";\r\nimport { Alert, Button, Form, Input, Space, Typography } from \"antd\";\r\nimport addreses from \"config/api/addresses\";\r\nimport { navigateTo } from \"config/routes\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport config from \"config\";\r\nimport SharedContext from \"context/SharedContext\";\r\nimport utils from \"config/utils\";\r\nimport storageKeys from \"config/storageKeys\";\r\nimport { ClaimTypes, TLoginResponse } from \"models/auth\";\r\nimport { MenuTypes } from \"models\";\r\nimport patterns from \"config/patterns\";\r\n\r\nconst { Text } = Typography;\r\nconst Login = () => {\r\n  const [frm] = Form.useForm();\r\n  const { t } = useTranslation();\r\n  const nav = useNavigate();\r\n  const [captchaHasError, toggleCaptcha] = useState(false);\r\n  const ref = useRef<ReCAPTCHA>(null);\r\n  const [captcha, setToken] = useState(\"\");\r\n  const { setUser, setMenues } = useContext(SharedContext);\r\n  const [http, loading] = useApi<TLoginResponse>({\r\n    onSuccess: (res) => {\r\n      const fullNameClaim = res?.claims.find(\r\n        (x) => x.type === ClaimTypes.FullName\r\n      )!;\r\n      const ncClaim = res?.claims.find(\r\n        (x) => x.type === ClaimTypes.NationalCode\r\n      )!;\r\n      const phoneClaim = res?.claims.find(\r\n        (x) => x.type === ClaimTypes.PhoneNumber\r\n      )!;\r\n      const menues =\r\n        res?.claims\r\n          .filter((x) => x.type === ClaimTypes.Permission)\r\n          .map((x) => x.value as MenuTypes) ?? [];\r\n      const user = {\r\n        fullName: fullNameClaim.value,\r\n        nationalCode: ncClaim.value,\r\n        phoneNumber: phoneClaim.value,\r\n      };\r\n      utils.storedData(storageKeys.token, res?.accessToken);\r\n      utils.storedData(storageKeys.menus, menues);\r\n      utils.storedData(storageKeys.user, user);\r\n      utils.storedData(storageKeys.refreshToken, res?.refreshToken);\r\n      setToken(res?.accessToken as string);\r\n      setMenues(menues);\r\n      setUser(user);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (data: any) => {\r\n    console.warn(\"TODO:// Remove line below after tests\")\r\n    localStorage.setItem(\"server\",data.server);\r\n    http.post(addreses.account.login, { ...data, captcha });\r\n  };\r\n  const onFinishFailed = () => {};\r\n  const goToForgotPassword = () => {\r\n    const mobNum = frm.getFieldValue(\"username\");\r\n    nav(\r\n      `${navigateTo.recoverPassword}${mobNum ? \"?mobileNumber=\" + mobNum : \"\"}`\r\n    );\r\n  };\r\n  const handleCapcthaError = () => {\r\n    toggleCaptcha(true);\r\n  };\r\n  return (\r\n    <div id=\"login\" className=\"inner\">\r\n      <h1 className=\"title\">\r\n        {t(\"login\")}\r\n        <Text type=\"secondary\">{t(\"loginToAccount\")}</Text>\r\n      </h1>\r\n      <Form\r\n        form={frm}\r\n        name=\"login-form\"\r\n        layout=\"vertical\"\r\n        onFinish={handleSubmit}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n        size=\"large\"\r\n        initialValues={\r\n          process.env.NODE_ENV === \"development\"\r\n            ? {\r\n                nationalCode: \"0987654321\",\r\n                password: \"hassan\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <Space direction=\"vertical\" size={1} className=\"w-100\">\r\n        <Form.Item\r\n            name=\"server\"\r\n            label={\"آدرس بک اند(موقت)\"}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"required\") ?? \"\",\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              className=\"ltr-elm\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"nationalCode\"\r\n            label={t(\"nationalCode\")}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"required\") ?? \"\",\r\n              },\r\n              {\r\n                message: t(\"wrongFormat\") ?? \"\",\r\n                pattern: patterns.nationalCode,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              autoFocus\r\n              className=\"ltr-elm\"\r\n              suffix={<CustomIcon size={16} name=\"IoCardOutline\" />}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            className=\"mb-0\"\r\n            name=\"password\"\r\n            label={t(\"password\")}\r\n            rules={[{ required: true, message: t(\"required\") ?? \"\" }]}\r\n          >\r\n            <Input.Password className=\"ltr-elm\" />\r\n          </Form.Item>\r\n          {!captchaHasError && process.env.NODE_ENV !== \"development\" && (\r\n            <Form.Item>\r\n              <ReCAPTCHA\r\n                ref={ref}\r\n                sitekey={config.siteKey}\r\n                onChange={(t) => setToken(t ?? \"\")}\r\n                hl=\"fa\"\r\n                onErrored={handleCapcthaError}\r\n                onError={handleCapcthaError}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n          <Form.Item>\r\n            <div className=\"action\">\r\n              <Button type=\"link\" onClick={goToForgotPassword}>\r\n                {t(\"forgotPassword\")}\r\n              </Button>\r\n              <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                disabled={\r\n                  !captcha &&\r\n                  !captchaHasError &&\r\n                  process.env.NODE_ENV !== \"development\"\r\n                }\r\n              >\r\n                {t(\"login\")}\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Space>\r\n      </Form>\r\n      {/* <Alert\r\n        type=\"info\"\r\n        className=\"mob-nav\"\r\n        message={\r\n          <Link to={navigateTo.signup}>\r\n            <span>{t(\"dontHasAnAccount\")}</span>\r\n            {t(\"signup\")}\r\n          </Link>\r\n        }\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import * as Io5Icons from \"react-icons/io5\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport PropTypes from \"prop-types\";\r\nconst CustomIcon = ({\r\n  name,\r\n  className,\r\n  size = 16,\r\n  ...props\r\n}: {\r\n  name: string;\r\n  className?: string;\r\n  size?: number;\r\n  [key: string]: any;\r\n}) => {\r\n  const FoundIcon =\r\n    Io5Icons[name as keyof typeof Io5Icons] ||\r\n    BsIcons[name as keyof typeof BsIcons] ||\r\n    FaIcons[name as keyof typeof FaIcons] ||\r\n    MdIcons[name as keyof typeof MdIcons];\r\n  return FoundIcon ? (\r\n    <FoundIcon\r\n      size={size}\r\n      className={`custom-icon${className ? \" \" + className : \"\"}`}\r\n      {...props}\r\n    />\r\n  ) : null;\r\n};\r\nCustomIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default CustomIcon;\r\n","const addreses = {\r\n  //=== Authenticate\r\n  account: {\r\n    login: \"/Account/Login\",\r\n  },\r\n  organizationLevel: {\r\n    list: \"/organizationlevel\",\r\n    add: \"/organizationlevel\",\r\n    update: \"/organizationlevel\",\r\n    find: (id: any) => `/organizationlevel/${id}`,\r\n    delete: (id: any) => `/organizationlevel/delete/${id}`,\r\n  },\r\n  roleManager: {\r\n    list: \"/rolemanager/listroles\",\r\n    add: \"/rolemanager/addrole\",\r\n    update: \"/rolemanager/editrole\",\r\n    find: (id: any) => `/rolemanager/detailrole?id=${id}`,\r\n    delete: (id: any) => `/rolemanager/deleterole?id=${id}`,\r\n  },\r\n  userManager: {\r\n    list: \"/usermanager/listusers\",\r\n    add: \"/userManager\",\r\n    update: \"/userManager\",\r\n    roles: \"/userManager/getRoles\",\r\n    find: (id: any) => `/userManager/${id}`,\r\n    changeStatus: (id: number, isEnabled: boolean) =>\r\n      `/userManager/changeStatus?id=${id}&isEnabled=${isEnabled}`,\r\n    delete: (id: number) => `/userManager/${id}`,\r\n  },\r\n  surfacewaterpermit: {\r\n    list: \"/surfaceWaterPermit/listSurafceWaterPermits\",\r\n    add: \"/surfaceWaterPermit\",\r\n    update: \"/surfaceWaterPermit\",\r\n    similar: (data: any) =>\r\n      `/surfaceWaterPermit/getSimilarRecords?${new URLSearchParams(\r\n        data\r\n      ).toString()}`,\r\n    find: (id: any) => `/surfaceWaterPermit/${id}`,\r\n  },\r\n  springWaterPermit: {\r\n    list: \"/springPermit/ListSpringPermits\",\r\n    add: \"/springPermit\",\r\n    update: \"/springPermit\",\r\n    similar: (data: any) =>\r\n      `/springPermit/getSimilarRecords?${new URLSearchParams(data).toString()}`,\r\n    find: (id: any) => `/springPermit/${id}`,\r\n  },\r\n  pondWaterPermit: {\r\n    list: \"/pondPermit/ListPondPermits\",\r\n    add: \"/pondPermit\",\r\n    update: \"/pondPermit\",\r\n    similar: (data: any) =>\r\n      `/pondPermit/getSimilarRecords?${new URLSearchParams(data).toString()}`,\r\n    find: (id: any) => `/pondPermit/${id}`,\r\n  },\r\n  wellWaterPermit: {\r\n    list: \"/wellPermit/listWellPermits\",\r\n    add: \"/wellPermit\",\r\n    update: \"/wellPermit\",\r\n    similar: (data: any) =>\r\n      `/wellPermit/getSimilarRecords?${new URLSearchParams(data).toString()}`,\r\n    find: (id: any) => `/wellPermit/${id}`,\r\n  },\r\n  locations: {\r\n    counties: \"/Locations/GetCounties\",\r\n    districs: (countyId: string) => `/Locations/counties/${countyId}/districs`,\r\n    cities: (districtId: string) => `/Locations/counties/${districtId}/cities`,\r\n    ruralDistricts: (districtId: string) =>\r\n      `/Locations/districts/${districtId}/rural-districts`,\r\n    villages: (ruralDistrictId: string) =>\r\n      `/Locations/${ruralDistrictId}/villages`,\r\n  },\r\n};\r\nexport default addreses;\r\n","const patterns = {\r\n  nationalCode: /\\d{10}/,\r\n  personelId: /\\d{4}/,\r\n  email: /\\S+@\\S+\\.\\S+/,\r\n  mobile: /09[0-9]{2}(-| )?[0-9]{3}(-| )?[0-9]{4}/,\r\n  phone: /0\\d{10}/,\r\n  ip: /(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/,\r\n  postalCode:/\\d{10}/,\r\n  url: /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/,\r\n};\r\nexport default patterns;\r\n","import Axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport config from \"config\";\r\nimport storageKeys from \"config/storageKeys\";\r\nimport util from \"config/utils\";\r\n//import { LoginVerifyResponse } from \"models/auth\";\r\n\r\n// const getRefeshToken = async (): Promise<Response<LoginVerifyResponse | null>> => {\r\n//   try {\r\n//     let call = await fetch(`${config.apiUrl}${addreses.refreshToken}`, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Accept\": \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Access-Control-Allow-Credentials\": \"*\",\r\n//         \"Token\": config.token ?? \"\"\r\n//       },\r\n//       body: JSON.stringify({\r\n//         refreshToken: util.getStoredData(storageKeys.refreshToken)\r\n//       })\r\n//     });\r\n//     let data = (await call.json()) as Response<LoginVerifyResponse | null>;\r\n//     util.storedData(storageKeys.token, data.result?.accessToken);\r\n//     //util.storedData(storageKeys.user, data.result?.user);\r\n//     //util.storedData(storageKeys.menus, data.result?.menus);\r\n//     return data;\r\n//   }\r\n//   catch (err) {\r\n//     console.log(\"Calling Refresh Token Failed\", err);\r\n//     return {\r\n//       isSuccess: false,\r\n//       result: null,\r\n//       message: \"\",\r\n//       resultCode: 500\r\n//     }\r\n//   }\r\n// }\r\nconst apiAxiosInstance = Axios.create({\r\n  baseURL: localStorage.getItem(\"server\")??\"\",//config.apiUrl,\r\n  withCredentials: false,//true,\r\n  timeout: config.requestTimeout,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"ngrok-skip-browser-warning\": \"skip-browser-warning\",\r\n    //\"Access-Control-Allow-Credentials\": \"*\",\r\n  },\r\n});\r\n\r\nconst onRequest = (config: AxiosRequestConfig): AxiosRequestConfig => {\r\n  console.warn(\"TODO:// Remove line below after tests\")\r\n  config.url = `${localStorage.getItem(\"server\")}${config.url}`;\r\n  let jwtToken = util.getStoredData(storageKeys.token);\r\n  if (jwtToken && config.headers)\r\n    config.headers.Authorization = `Bearer ${jwtToken}`;\r\n  return config;\r\n};\r\n\r\nconst onRequestError = (error: AxiosError): Promise<AxiosError> => {\r\n  //console.error(`[request error] [${JSON.stringify(error)}]`);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst onResponse = (response: AxiosResponse): AxiosResponse => {\r\n  //console.info(`[response] [${JSON.stringify(response)}]`);\r\n  return response;\r\n};\r\n\r\nconst onResponseError = async (error: AxiosError): Promise<AxiosError> => {\r\n  const originalRequest = error.config;\r\n  // if (originalRequest && error.response?.status === 401 &&\r\n  //   error.response.data &&\r\n  //   (error.response.data as Response<any>).resultCode === 1001\r\n  //   && !originalRequest.headers?.retry) {\r\n  //   let callRefreshToken = await getRefeshToken();\r\n  //   if (!callRefreshToken.isSuccess) {\r\n  //     return Promise.reject(error);\r\n  //   }\r\n  //   originalRequest.headers = {\r\n  //     ...originalRequest.headers,\r\n  //     Authorization: `Bearer ${callRefreshToken.result?.jwtToken.token}`,\r\n  //     retry: true\r\n  //   };\r\n  //   return apiAxiosInstance(originalRequest);\r\n  // }\r\n  return Promise.reject(error);\r\n};\r\napiAxiosInstance.interceptors.request.use(onRequest, onRequestError);\r\napiAxiosInstance.interceptors.response.use(onResponse, onResponseError);\r\nexport default apiAxiosInstance;\r\n","import { message } from \"antd\";\r\nimport { AxiosError } from \"axios\";\r\nimport apiAxios from \"config/api\";\r\nimport util from \"config/utils\";\r\nimport { TResponse } from \"models\";\r\nimport {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useEffect,\r\n  useState,\r\n  useTransition,\r\n} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useCache from \"./useCache\";\r\n\r\ninterface ActionType {\r\n  get: (url: string) => void;\r\n  post: (url: string, data?: unknown, widthFile?: boolean) => void;\r\n  put: (url: string, data?: unknown) => void;\r\n  delete: (url: string, data?: unknown) => void;\r\n  download: (url: string, data?: unknown) => void;\r\n}\r\ninterface Options<T, MapedT = void> {\r\n  initialValue?: T;\r\n  initLoading?: boolean;\r\n  autoCallUrl?: string;\r\n  cachingLifeTimeInSeconds?: number;\r\n  customErrorHandler?: (err: Error) => void;\r\n  filter?: (res: T | null) => T;\r\n  onSuccess?: (res: T | MapedT | null, params?: any) => void;\r\n  onFailed?: (res: Error, data?: any) => void;\r\n  mapper?: (data: T | null) => MapedT;\r\n}\r\n\r\nconst useApi = <T, MapedT = never>(\r\n  options?: Options<T, MapedT>\r\n): [\r\n  ActionType,\r\n  boolean,\r\n  T | MapedT | null,\r\n  Dispatch<SetStateAction<T | MapedT | null>>\r\n] => {\r\n  const [loading, toggle] = useState<boolean>(options?.initLoading ?? false);\r\n  const [data, setData] = useState<T | MapedT | null>(\r\n    options?.initialValue ?? null\r\n  );\r\n  const { t } = useTranslation();\r\n  const cache = useCache();\r\n  const [isPending, startTransition] = useTransition();\r\n  const afterCall = (result: T | null, params?: any) => {\r\n    startTransition(() => {\r\n      let filteredData = options?.filter ? options?.filter(result) : result;\r\n      let mapedData = options?.mapper\r\n        ? options?.mapper(filteredData)\r\n        : filteredData;\r\n      setData(mapedData);\r\n      options?.onSuccess?.(mapedData, params);\r\n    });\r\n  };\r\n  const errorHandler = (err: Error, status?: number, resultCode?: number) => {\r\n    if (!options?.customErrorHandler) {\r\n      console.log(\"api error is\",err);\r\n      message.error(err?.message);\r\n    } else options?.customErrorHandler(err);\r\n    if (status === 401) {\r\n      util.clearStorage();\r\n      window.location.href = \"/\";\r\n    }\r\n  };\r\n  const mutate: ActionType = {\r\n    get: async (url: string) => {\r\n      toggle(true);\r\n      try {\r\n        if (\r\n          options?.cachingLifeTimeInSeconds\r\n        ) {\r\n          let cachedResponse = await cache.get(url);\r\n          if (cachedResponse) {\r\n            afterCall(cachedResponse, { url });\r\n            toggle(false);\r\n            return;\r\n          }\r\n        }\r\n        let result = await apiAxios.get<TResponse<T>>(url);\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          if (options?.cachingLifeTimeInSeconds) {\r\n            cache.add(\r\n              url,\r\n              result.data.result,\r\n              options.cachingLifeTimeInSeconds\r\n            );\r\n          }\r\n          afterCall(result.data.result);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    post: async (url: string, params: any, withFile?: boolean) => {\r\n      toggle(true);\r\n      try {\r\n        let formData = null;\r\n        if (withFile) {\r\n          formData = new FormData();\r\n          for (let k in params) {\r\n            formData.append(k, params[k]);\r\n          }\r\n        }\r\n        let result = await apiAxios.post<TResponse<T>>(\r\n          url,\r\n          withFile ? formData : params,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": withFile\r\n                ? \"multipart/form-data\"\r\n                : \"application/Json\",\r\n            },\r\n          }\r\n        );\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          afterCall(result.data.result, params);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    put: async (url: string, params: any) => {\r\n      toggle(true);\r\n      try {\r\n        let result = await apiAxios.put<TResponse<T>>(url, params);\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          afterCall(result.data.result, params);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    delete: async (url: string, params: any) => {\r\n      toggle(true);\r\n      try {\r\n        let result = await apiAxios.delete<TResponse<T>>(\r\n          `${url}?${util.convertToQueryString(params)}`\r\n        );\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          afterCall(result.data.result, params);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    download: async (url: string, params: any, fileName?: string) => {\r\n      toggle(true);\r\n      try {\r\n        let TResponse = await apiAxios.get(\r\n          `${url}?${util.convertToQueryString(params)}`,\r\n          {\r\n            responseType: \"blob\",\r\n          }\r\n        );\r\n        const href = URL.createObjectURL(TResponse.data);\r\n\r\n        // create \"a\" HTML element with href to file & click\r\n        const link = document.createElement(\"a\");\r\n        link.href = href;\r\n        if (!fileName) {\r\n          const disposition = TResponse.headers[\"content-disposition\"];\r\n          console.log(\"dis\", disposition, TResponse.headers);\r\n          fileName = disposition && disposition.match(/filename=\"(.+)\"/)?.[1];\r\n        }\r\n        link.setAttribute(\"download\", fileName ?? \"file.txt\"); //or any other extension\r\n        document.body.appendChild(link);\r\n        link.click();\r\n\r\n        // clean up \"a\" element & remove ObjectURL\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(href);\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    if (options?.autoCallUrl) {\r\n      mutate.get(options?.autoCallUrl);\r\n    }\r\n  }, []);\r\n  return [\r\n    mutate,\r\n    isPending || loading,\r\n    data,\r\n    setData,\r\n  ];\r\n};\r\nexport default useApi;\r\n"],"names":["ClaimTypes","Text","Typography","Form","frm","t","useTranslation","nav","useNavigate","useState","captchaHasError","toggleCaptcha","ref","useRef","captcha","setToken","useContext","SharedContext","setUser","setMenues","useApi","onSuccess","res","fullNameClaim","claims","find","x","type","FullName","ncClaim","NationalCode","phoneClaim","PhoneNumber","menues","filter","Permission","map","value","user","fullName","nationalCode","phoneNumber","utils","storageKeys","accessToken","refreshToken","http","loading","handleCapcthaError","id","className","form","name","layout","onFinish","data","console","warn","localStorage","setItem","server","post","addreses","onFinishFailed","autoComplete","size","initialValues","direction","label","rules","required","message","pattern","patterns","autoFocus","suffix","CustomIcon","sitekey","config","onChange","hl","onErrored","onError","onClick","mobNum","getFieldValue","navigateTo","htmlType","disabled","process","props","FoundIcon","Io5Icons","BsIcons","FaIcons","MdIcons","account","login","organizationLevel","list","add","update","delete","roleManager","userManager","roles","changeStatus","isEnabled","surfacewaterpermit","similar","URLSearchParams","toString","springWaterPermit","pondWaterPermit","wellWaterPermit","locations","counties","districs","countyId","cities","districtId","ruralDistricts","villages","ruralDistrictId","personelId","email","mobile","phone","ip","postalCode","url","apiAxiosInstance","Axios","baseURL","getItem","withCredentials","timeout","headers","Accept","onResponseError","error","Promise","reject","interceptors","request","use","jwtToken","util","Authorization","response","options","initLoading","toggle","initialValue","setData","cache","useCache","useTransition","isPending","startTransition","afterCall","result","params","filteredData","mapedData","mapper","errorHandler","err","status","resultCode","customErrorHandler","log","window","location","href","mutate","get","cachingLifeTimeInSeconds","cachedResponse","apiAxios","succeeded","jsError","Error","messages","onFailed","axiosErr","withFile","formData","k","FormData","append","put","download","fileName","responseType","TResponse","URL","createObjectURL","link","document","createElement","disposition","match","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","useEffect","autoCallUrl"],"sourceRoot":""}