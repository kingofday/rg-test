{"version":3,"file":"static/js/501.3ceb0117.chunk.js","mappings":"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","sources":["context/AdminPageContext.tsx","components/panel/shared/cells/EditAction.tsx","components/panel/shared/EntryFromModal.tsx","components/panel/shared/AdminPage.tsx","components/panel/shared/ConfirmModal.tsx","components/panel/shared/Page.tsx","components/shared/CustomIcon.tsx","config/api/addresses.ts","config/api/index.ts","hooks/useApi.ts"],"sourcesContent":["import { FormInstance } from \"antd\";\r\nimport { createContext } from \"react\";\r\nconst AdminPageContext = createContext<{\r\n    form?: FormInstance\r\n}>({});\r\nexport default AdminPageContext;","import { Button } from \"antd\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IEditAction {\r\n  findUrl?: string | ((record: any) => string);\r\n  record: any;\r\n  idProp: string;\r\n  afterSelect: (record: any) => void;\r\n  isMobile?: boolean;\r\n}\r\nconst EditAction = (props: IEditAction) => {\r\n  const { t } = useTranslation();\r\n  const [find, finding] = useApi<any>({\r\n    onSuccess: (res) => {\r\n      props.afterSelect(res);\r\n    },\r\n  });\r\n  const onClick = () => {\r\n    if (props.findUrl) {\r\n      find.get(\r\n        `${\r\n          typeof props.findUrl === \"string\"\r\n            ? props.findUrl\r\n            : props.findUrl(props.record)\r\n        }?${props.idProp}=${\r\n          props.record[props.idProp as keyof typeof props.record]\r\n        }`\r\n      );\r\n    } else {\r\n      props.afterSelect(props.record);\r\n    }\r\n  };\r\n  return (\r\n    <Button\r\n      loading={finding}\r\n      type={props.isMobile ? \"ghost\" : \"primary\"}\r\n      shape={props.isMobile ? \"default\" : \"circle\"}\r\n      icon={\r\n        <CustomIcon size={props.isMobile ? 20 : 10} name=\"IoPencilOutline\" />\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {props.isMobile ? t(\"edit\") : null}\r\n    </Button>\r\n  );\r\n};\r\nexport default EditAction;\r\n","import { Form, Modal } from \"antd\";\r\nimport { ElementType } from \"react\";\r\ninterface IEntryForm<T> {\r\n  onCancel: () => void;\r\n  title: string;\r\n  entryModalWidth?: number;\r\n  initialValues?: any;\r\n  loading?: boolean;\r\n  EntryForm: ElementType;\r\n  onEntrySubmit?: (values: T) => void;\r\n}\r\nconst EntryFormModal = <T,>(props: IEntryForm<T>) => {\r\n  const [entryFrm] = Form.useForm();\r\n  const onOk = () => {\r\n    entryFrm.submit();\r\n  };\r\n  return (\r\n    <Modal\r\n      destroyOnClose\r\n      open={true}\r\n      onCancel={props.onCancel}\r\n      title={props.title}\r\n      onOk={onOk}\r\n      okButtonProps={{ loading: props.loading }}\r\n      width={props.entryModalWidth}\r\n    >\r\n      <Form\r\n        id=\"entry-form\"\r\n        layout=\"vertical\"\r\n        form={entryFrm}\r\n        initialValues={props.initialValues}\r\n        onFinish={props.onEntrySubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <props.EntryForm form={entryFrm} data={props.initialValues} />\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default EntryFormModal;\r\n","import { Button, Collapse, Dropdown, Form, Modal, Space, Table } from \"antd\";\r\nimport type {\r\n  ColumnType,\r\n  ColumnsType,\r\n  TablePaginationConfig,\r\n} from \"antd/es/table\";\r\nimport type { FilterValue, SorterResult } from \"antd/es/table/interface\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport config from \"config\";\r\nimport util from \"config/utils\";\r\nimport AdminPageContext from \"context/AdminPageContext\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { PagedData, PagedListUpdater } from \"models\";\r\nimport {\r\n  CSSProperties,\r\n  ElementType,\r\n  MouseEvent,\r\n  ReactNode,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DeleteConfirmModal from \"./ConfirmModal\";\r\nimport Page from \"./Page\";\r\nimport EditAction from \"./cells/EditAction\";\r\nimport EntryFormModal from \"./EntryFromModal\";\r\n\r\nconst { Panel } = Collapse;\r\ninterface DeleteAction {\r\n  icon?: string;\r\n  url: string | ((record: any) => string);\r\n  confirmMessage?: string;\r\n  sendingProp?: string;\r\n}\r\ntype EditAction = {\r\n  icon?: string;\r\n  url: string;\r\n};\r\ninterface ActionColumn<T> {\r\n  icon?: string;\r\n  renderer?: (\r\n    text: string,\r\n    record: T,\r\n    setData: PagedListUpdater<T>,\r\n    isMobile?: boolean\r\n  ) => ReactNode;\r\n  action?: (record: T, setData: PagedListUpdater<T>) => void;\r\n}\r\ninterface AdminPageProps<T> {\r\n  title: string;\r\n  id?: string;\r\n  idProp: string;\r\n  children: ReactNode;\r\n  EntryForm?: ElementType;\r\n  filterUrl: string;\r\n  addUrl?: string;\r\n  findUrl?: string | ((record: T) => string);\r\n  columns: ColumnsType<T>;\r\n  disablePaging?: boolean;\r\n  pageSize?: number;\r\n  initialValues?: any;\r\n  deleteAction?: DeleteAction;\r\n  editAction?: EditAction;\r\n  handleSubmit?: boolean;\r\n  checkIsMerchant?: boolean;\r\n  enableRowNumber?: boolean;\r\n  buttons?: {\r\n    onClick: (e: MouseEvent<HTMLElement>, data: any) => void;\r\n    className?: string;\r\n    loading?: boolean;\r\n    children: ReactNode;\r\n    style?: CSSProperties;\r\n    type?: \"default\" | \"link\" | \"text\" | \"ghost\" | \"primary\" | \"dashed\";\r\n  }[];\r\n  customActions?: ActionColumn<T>[];\r\n  scrollX?: string | number;\r\n  filtersHeight?: number;\r\n  scrollY?: number;\r\n  entryModalWidth?: number;\r\n}\r\n\r\nconst AdminPage = <DataType extends Object>({\r\n  id,\r\n  title,\r\n  columns,\r\n  idProp,\r\n  filterUrl,\r\n  findUrl,\r\n  addUrl,\r\n  initialValues,\r\n  disablePaging,\r\n  EntryForm,\r\n  children,\r\n  deleteAction,\r\n  editAction,\r\n  pageSize = 15,\r\n  handleSubmit = true,\r\n  customActions,\r\n  buttons,\r\n  scrollX = \"1500px\",\r\n  filtersHeight,\r\n  scrollY,\r\n  entryModalWidth,\r\n  enableRowNumber = true,\r\n}: AdminPageProps<DataType>) => {\r\n  const { t } = useTranslation();\r\n  const [filterFrm] = Form.useForm();\r\n\r\n  const [modal, toggleModal] = useState(false);\r\n  const [collapsed, toggleCollapsed] = useState(true);\r\n  const [selected, select] = useState<DataType | null>(null);\r\n  const [recordForRemove, toggleConfirmModal] = useState<DataType | null>(null);\r\n  const [innerColumns, setInnerColumns] = useState(columns);\r\n  const [paging, setPaging] = useState({\r\n    page: 1,\r\n    pageSize: pageSize,\r\n  });\r\n  const pn = useRef<number>(1);\r\n  const [filter, loading, data, setData] = useApi<PagedData<DataType>>({\r\n    initLoading: true,\r\n  });\r\n  const [edit, editing] = useApi<any>({\r\n    onSuccess: (_, params) => {\r\n      onEditSuccess(params);\r\n    },\r\n  });\r\n  const [add, adding] = useApi<any>({\r\n    onSuccess: (newItem) => {\r\n      onAddSuccess(newItem);\r\n    },\r\n  });\r\n  const [del, deleting] = useApi<boolean>({\r\n    onSuccess: (res, params) => {\r\n      let prop = idProp as keyof DataType;\r\n      let id = params?.[prop];\r\n      if (id)\r\n        setData(\r\n          (s) =>\r\n            ({\r\n              ...s,\r\n              totalEntitiesCount: s?.totalEntitiesCount ?? 1 - 1,\r\n              results: s?.results.filter((x) => x[prop] !== id),\r\n            } as PagedData<DataType>)\r\n        );\r\n      toggleConfirmModal(null);\r\n    },\r\n  });\r\n  const isMobile = useMemo(() => window.outerWidth < config.breakpoints.xl, []);\r\n  const onEditSuccess = (params: any, closeModal: boolean = true) => {\r\n    let prop = idProp as keyof DataType;\r\n    let id = params?.[prop];\r\n    if (id)\r\n      setData(\r\n        (s) =>\r\n          ({\r\n            ...s,\r\n            results: s?.results.map((x) =>\r\n              x[prop] === id\r\n                ? {\r\n                    ...x,\r\n                    ...params,\r\n                  }\r\n                : x\r\n            ),\r\n          } as PagedData<DataType>)\r\n      );\r\n    if (closeModal) toggleModal(false);\r\n  };\r\n  const onAddSuccess = (newItem: DataType, closeModal: boolean = true) => {\r\n    let prop = idProp as keyof DataType;\r\n    let id = newItem?.[prop];\r\n    if (id)\r\n      setData(\r\n        (s) =>\r\n          ({\r\n            ...s,\r\n            totalEntitiesCount: s?.totalEntitiesCount ?? 0 + 1,\r\n            results: [newItem, ...(s?.results ?? [])],\r\n          } as PagedData<DataType>)\r\n      );\r\n    if (closeModal) toggleModal(false);\r\n  };\r\n  const onEdit = (record: DataType) => {\r\n    select(record);\r\n    toggleModal(true);\r\n  };\r\n  const onDelete = (record: DataType) => {\r\n    toggleConfirmModal(record);\r\n  };\r\n  const handleDelete = () => {\r\n    if (!!recordForRemove && !!deleteAction)\r\n      del.delete(\r\n        typeof deleteAction?.url === \"string\"\r\n          ? deleteAction?.url\r\n          : deleteAction?.url(recordForRemove),\r\n        {\r\n          [deleteAction?.sendingProp ?? idProp]:\r\n            recordForRemove[(idProp ?? \"id\") as keyof DataType],\r\n        }\r\n      );\r\n  };\r\n\r\n  const actionsCol = useMemo((): ColumnType<DataType> | null => {\r\n    if (\r\n      (!customActions || !customActions.length) &&\r\n      !editAction &&\r\n      !deleteAction\r\n    )\r\n      return null;\r\n    const count =\r\n      (customActions?.length ?? 0) +\r\n      (!!editAction ? 1 : 0) +\r\n      (!!deleteAction ? 1 : 0);\r\n    return {\r\n      title: <CustomIcon name=\"IoBuildOutline\" />,\r\n      align: \"center\",\r\n      key: \"actions\",\r\n      fixed: \"right\",\r\n      width: isMobile ? 30 : count * 25 + 8 * (count - 1) + 40,\r\n      dataIndex: \"actions\",\r\n      render: function (text, record, index) {\r\n        if (isMobile) {\r\n          let items: any[] = [];\r\n          if (!!editAction) {\r\n            items.push({\r\n              key: \"edit\",\r\n              label: (\r\n                <EditAction\r\n                  findUrl={findUrl}\r\n                  afterSelect={onEdit}\r\n                  idProp={idProp}\r\n                  record={record}\r\n                  isMobile\r\n                />\r\n              ),\r\n            });\r\n          }\r\n          if (!!deleteAction) {\r\n            items.push({\r\n              key: \"delete\",\r\n              label: (\r\n                <Button\r\n                  danger\r\n                  type={isMobile ? \"ghost\" : \"primary\"}\r\n                  shape={isMobile ? \"default\" : \"circle\"}\r\n                  icon={\r\n                    <CustomIcon\r\n                      size={isMobile ? 20 : 10}\r\n                      name=\"IoTrashOutline\"\r\n                    />\r\n                  }\r\n                  onClick={() => onDelete(record)}\r\n                />\r\n              ),\r\n            });\r\n          }\r\n          if (customActions?.length) {\r\n            items = items.concat(\r\n              customActions.map((x, idx) => ({\r\n                key: \"action-\" + idx,\r\n                label: x.renderer ? (\r\n                  x.renderer(text, record, setData, isMobile)\r\n                ) : (\r\n                  <Button\r\n                    key={idx}\r\n                    type={isMobile ? \"ghost\" : \"primary\"}\r\n                    shape={isMobile ? \"default\" : \"circle\"}\r\n                    icon={\r\n                      <CustomIcon\r\n                        size={isMobile ? 20 : 10}\r\n                        name={x.icon ?? \"BsDash\"}\r\n                      />\r\n                    }\r\n                    onClick={() => x.action?.(record, setData)}\r\n                  />\r\n                ),\r\n              }))\r\n            );\r\n          }\r\n          return (\r\n            <Dropdown menu={{ items }}>\r\n              <a onClick={(e) => e.preventDefault()}>\r\n                <CustomIcon name=\"FaEllipsisV\" />\r\n              </a>\r\n            </Dropdown>\r\n          );\r\n        }\r\n        return (\r\n          <Space className=\"actions\">\r\n            {!!editAction && (\r\n              <EditAction\r\n                findUrl={findUrl}\r\n                afterSelect={onEdit}\r\n                idProp={idProp}\r\n                record={record}\r\n              />\r\n            )}\r\n            {!!deleteAction && (\r\n              <Button\r\n                danger\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon={<CustomIcon size={10} name=\"IoTrashOutline\" />}\r\n                onClick={() => onDelete(record)}\r\n              />\r\n            )}\r\n            {!!customActions &&\r\n              customActions.map((x, idx) =>\r\n                x.renderer ? (\r\n                  x.renderer(text, record, setData)\r\n                ) : (\r\n                  <Button\r\n                    key={idx}\r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    icon={<CustomIcon size={10} name={x.icon ?? \"BsDash\"} />}\r\n                    onClick={() => x.action?.(record, setData)}\r\n                  />\r\n                )\r\n              )}\r\n          </Space>\r\n        );\r\n      },\r\n    };\r\n  }, [customActions]);\r\n\r\n  const onAdd = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    select(null);\r\n    toggleModal(true);\r\n  };\r\n  const getData = (data: any) => {\r\n    filter.get(\r\n      `${filterUrl}?${util\r\n        .convertToQueryString({ ...paging, ...data })\r\n        .toString()}`\r\n    );\r\n  };\r\n  const onFilter = (data: any) => {\r\n    setPaging((x) => ({ ...x, page: 1 }));\r\n    pn.current = 1;\r\n    if (\r\n      columns.length !== innerColumns.length ||\r\n      columns.some((x) => !innerColumns.map((i) => i.key).includes(x.key))\r\n    ) {\r\n      setInnerColumns(columns);\r\n    }\r\n    getData({ ...data, page: 1 });\r\n  };\r\n  const onEntrySubmit = (record: DataType) => {\r\n    if (editAction && selected) edit.put(editAction.url, record);\r\n    else if (addUrl && !selected) add.post(addUrl, record);\r\n  };\r\n  const onTableChange = (\r\n    pagination: TablePaginationConfig,\r\n    filters: Record<string, FilterValue | null>,\r\n    sorter: SorterResult<DataType> | SorterResult<DataType>[]\r\n  ) => {\r\n    setPaging({\r\n      page: pagination.current ?? 1,\r\n      pageSize: pagination.pageSize ?? 15,\r\n    });\r\n    pn.current = pagination.current ?? 1;\r\n    getData({\r\n      ...filterFrm.getFieldsValue(),\r\n      page: pagination.current ?? 1,\r\n    });\r\n  };\r\n  const onCancel = () => {\r\n    select(null);\r\n    toggleModal(false);\r\n  };\r\n  useEffect(() => {\r\n    getData(filterFrm.getFieldsValue());\r\n  }, []);\r\n  const columnsList = useMemo(() => {\r\n    let list = actionsCol\r\n      ? [\r\n          ...innerColumns\r\n            .filter((x) => x.key !== \"rowNumber\")\r\n            .map((c) => ({\r\n              ...c,\r\n              fixed:\r\n                window.outerWidth < config.breakpoints.lg ? undefined : c.fixed,\r\n            })),\r\n          actionsCol,\r\n        ]\r\n      : innerColumns.filter((x) => x.key !== \"rowNumber\");\r\n    if (enableRowNumber) {\r\n      list.unshift({\r\n        key: \"rowNumber\",\r\n        title: \"#\",\r\n        width: 80,\r\n        fixed: window.outerWidth < config.breakpoints.lg ? undefined : \"left\",\r\n        render: (value, record, index) => {\r\n          return <span>{(pn.current - 1) * paging.pageSize + index + 1}</span>;\r\n        },\r\n      });\r\n    }\r\n    return list;\r\n  }, [innerColumns]);\r\n  return (\r\n    <AdminPageContext.Provider value={{ form: filterFrm }}>\r\n      <Page id={id} title={title} className=\"admin\">\r\n        <Collapse\r\n          defaultActiveKey={[\"filters\"]}\r\n          onChange={() => toggleCollapsed((s) => !s)}\r\n          //onChange={onChange}\r\n          //expandIconPosition={expandIconPosition}\r\n        >\r\n          <Panel\r\n            header={t(\"filters\")}\r\n            key=\"filters\"\r\n            extra={\r\n              !addUrl ? null : (\r\n                <Button\r\n                  icon={<CustomIcon name=\"IoAdd\" />}\r\n                  onClick={onAdd}\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  title={t(\"add\") ?? \"\"}\r\n                >\r\n                  <small>{t(\"add\")}</small>\r\n                </Button>\r\n              )\r\n            }\r\n          >\r\n            <Form\r\n              name=\"filters\"\r\n              form={filterFrm}\r\n              initialValues={initialValues}\r\n              onFinish={onFilter}\r\n              autoComplete=\"off\"\r\n            >\r\n              {children}\r\n              <Form.Item className=\"flex-row-end btns\">\r\n                {buttons?.map((x) => (\r\n                  <Button\r\n                    type={\"primary\" ?? x.type}\r\n                    htmlType=\"button\"\r\n                    style={x.style}\r\n                    className={x.className}\r\n                    onClick={(e) => x.onClick(e, filterFrm.getFieldsValue())}\r\n                  >\r\n                    {x.children}\r\n                  </Button>\r\n                ))}\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {t(\"filter\")}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Panel>\r\n        </Collapse>\r\n        <Table\r\n          loading={loading}\r\n          direction=\"rtl\"\r\n          rowKey={idProp}\r\n          key={`table-${idProp}`}\r\n          columns={columnsList}\r\n          dataSource={data === null ? undefined : [...data.results]}\r\n          onChange={onTableChange}\r\n          scroll={{\r\n            x: scrollX,\r\n            y: scrollY\r\n              ? scrollY + (collapsed ? 0 : filtersHeight ?? 0)\r\n              : scrollY,\r\n          }}\r\n          pagination={\r\n            disablePaging\r\n              ? undefined\r\n              : {\r\n                  pageSize: paging.pageSize,\r\n                  current: paging.page,\r\n                  total: data?.totalEntitiesCount,\r\n                }\r\n          }\r\n        />\r\n        {!!EntryForm &&\r\n          (handleSubmit ? (\r\n            modal ? (\r\n              <EntryFormModal<DataType>\r\n                EntryForm={EntryForm}\r\n                onCancel={onCancel}\r\n                onEntrySubmit={onEntrySubmit}\r\n                entryModalWidth={entryModalWidth}\r\n                title={selected ? t(\"edit\") : t(\"add\")}\r\n                initialValues={selected ?? undefined}\r\n                loading={adding || editing}\r\n              />\r\n            ) : null\r\n          ) : modal ? (\r\n            <Modal\r\n              destroyOnClose\r\n              open={true}\r\n              onCancel={onCancel}\r\n              title={selected ? t(\"edit\") : t(\"add\")}\r\n              footer={null}\r\n              width={entryModalWidth}\r\n            >\r\n              <EntryForm\r\n                onCancel={() => toggleModal(false)}\r\n                data={selected}\r\n                onSuccess={selected ? onEditSuccess : onAddSuccess}\r\n              />\r\n            </Modal>\r\n          ) : null)}\r\n        <DeleteConfirmModal\r\n          open={!!recordForRemove}\r\n          loading={deleting}\r\n          onOk={handleDelete}\r\n          onCancel={() => toggleConfirmModal(null)}\r\n        />\r\n      </Page>\r\n    </AdminPageContext.Provider>\r\n  );\r\n};\r\nexport default AdminPage;\r\n","import { Modal, Typography } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst { Paragraph } = Typography;\r\ninterface DeleteConfirmProps {\r\n    loading?: boolean;\r\n    title?:string;\r\n    message?: string;\r\n    open: boolean;\r\n    onOk: () => void;\r\n    onCancel: () => void;\r\n}\r\nconst ConfirmModal = ({ open, onOk, loading, onCancel,title, message }: DeleteConfirmProps) => {\r\n    const { t } = useTranslation();\r\n    return <Modal\r\n        title={title??t(\"delete\")}\r\n        open={open}\r\n        onOk={onOk}\r\n        onCancel={onCancel}\r\n        okButtonProps={{ danger: true, loading }}>\r\n        <Paragraph>{message ? message : t(\"areYouSure\")}</Paragraph>\r\n    </Modal>\r\n}\r\nexport default ConfirmModal;","import SharedContext from \"context/SharedContext\";\r\nimport { useEffect, ReactNode, useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useSetRecoilState } from \"recoil\";\r\ninterface PageProps {\r\n    id?: string;\r\n    title: string;\r\n    children: ReactNode;\r\n    className?: string\r\n}\r\nconst Page = ({ id, title, className, children }: PageProps) => {\r\n    const { t } = useTranslation();\r\n    const {setTitle} = useContext(SharedContext);\r\n    useEffect(() => {\r\n        setTitle(t(title) ?? \"\");\r\n    }, [])\r\n    return <div id={id} className={`page${className ? \" \" + className : \"\"}`}>\r\n        {children}\r\n    </div>;\r\n};\r\nexport default Page;","import * as Io5Icons from \"react-icons/io5\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport PropTypes from \"prop-types\";\r\nconst CustomIcon = ({\r\n  name,\r\n  className,\r\n  size = 16,\r\n  ...props\r\n}: {\r\n  name: string;\r\n  className?: string;\r\n  size?: number;\r\n  [key: string]: any;\r\n}) => {\r\n  const FoundIcon =\r\n    Io5Icons[name as keyof typeof Io5Icons] ||\r\n    BsIcons[name as keyof typeof BsIcons] ||\r\n    FaIcons[name as keyof typeof FaIcons] ||\r\n    MdIcons[name as keyof typeof MdIcons];\r\n  return FoundIcon ? (\r\n    <FoundIcon\r\n      size={size}\r\n      className={`custom-icon${className ? \" \" + className : \"\"}`}\r\n      {...props}\r\n    />\r\n  ) : null;\r\n};\r\nCustomIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default CustomIcon;\r\n","const addreses = {\r\n  //=== Authenticate\r\n  account: {\r\n    login: \"/Account/Login\",\r\n  },\r\n  organizationLevel: {\r\n    list: \"/organizationlevel\",\r\n    add: \"/organizationlevel\",\r\n    update: \"/organizationlevel\",\r\n    find: (id: any) => `/organizationlevel/${id}`,\r\n    delete: (id: any) => `/organizationlevel/delete/${id}`,\r\n  },\r\n  roleManager: {\r\n    list: \"/rolemanager/listroles\",\r\n    add: \"/rolemanager/addrole\",\r\n    update: \"/rolemanager/editrole\",\r\n    find: (id: any) => `/rolemanager/detailrole?id=${id}`,\r\n    delete: (id: any) => `/rolemanager/deleterole?id=${id}`,\r\n  },\r\n  userManager: {\r\n    list: \"/usermanager/listusers\",\r\n    add: \"/userManager\",\r\n    update: \"/userManager\",\r\n    roles: \"/userManager/getRoles\",\r\n    find: (id: any) => `/userManager/${id}`,\r\n    changeStatus: (id: number, isEnabled: boolean) =>\r\n      `/userManager/changeStatus?id=${id}&isEnabled=${isEnabled}`,\r\n    delete: (id: number) => `/userManager/${id}`,\r\n  },\r\n  surfacewaterpermit: {\r\n    list: \"/surfaceWaterPermit/listSurafceWaterPermits\",\r\n    add: \"/surfaceWaterPermit\",\r\n    update: \"/surfaceWaterPermit\",\r\n    similar: (data: any) =>\r\n      `/surfaceWaterPermit/getSimilarRecords?${new URLSearchParams(\r\n        data\r\n      ).toString()}`,\r\n    find: (id: any) => `/surfaceWaterPermit/${id}`,\r\n  },\r\n  springWaterPermit: {\r\n    list: \"/springPermit/ListSpringPermits\",\r\n    add: \"/springPermit\",\r\n    update: \"/springPermit\",\r\n    similar: (data: any) =>\r\n      `/springPermit/getSimilarRecords?${new URLSearchParams(data).toString()}`,\r\n    find: (id: any) => `/springPermit/${id}`,\r\n  },\r\n  pondWaterPermit: {\r\n    list: \"/pondPermit/ListPondPermits\",\r\n    add: \"/pondPermit\",\r\n    update: \"/pondPermit\",\r\n    similar: (data: any) =>\r\n      `/pondPermit/getSimilarRecords?${new URLSearchParams(data).toString()}`,\r\n    find: (id: any) => `/pondPermit/${id}`,\r\n  },\r\n  wellWaterPermit: {\r\n    list: \"/wellPermit/listWellPermits\",\r\n    add: \"/wellPermit\",\r\n    update: \"/wellPermit\",\r\n    similar: (data: any) =>\r\n      `/wellPermit/getSimilarRecords?${new URLSearchParams(data).toString()}`,\r\n    find: (id: any) => `/wellPermit/${id}`,\r\n  },\r\n  locations: {\r\n    counties: \"/Locations/GetCounties\",\r\n    districs: (countyId: string) => `/Locations/counties/${countyId}/districs`,\r\n    cities: (districtId: string) => `/Locations/counties/${districtId}/cities`,\r\n    ruralDistricts: (districtId: string) =>\r\n      `/Locations/districts/${districtId}/rural-districts`,\r\n    villages: (ruralDistrictId: string) =>\r\n      `/Locations/${ruralDistrictId}/villages`,\r\n  },\r\n};\r\nexport default addreses;\r\n","import Axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport config from \"config\";\r\nimport storageKeys from \"config/storageKeys\";\r\nimport util from \"config/utils\";\r\n//import { LoginVerifyResponse } from \"models/auth\";\r\n\r\n// const getRefeshToken = async (): Promise<Response<LoginVerifyResponse | null>> => {\r\n//   try {\r\n//     let call = await fetch(`${config.apiUrl}${addreses.refreshToken}`, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Accept\": \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Access-Control-Allow-Credentials\": \"*\",\r\n//         \"Token\": config.token ?? \"\"\r\n//       },\r\n//       body: JSON.stringify({\r\n//         refreshToken: util.getStoredData(storageKeys.refreshToken)\r\n//       })\r\n//     });\r\n//     let data = (await call.json()) as Response<LoginVerifyResponse | null>;\r\n//     util.storedData(storageKeys.token, data.result?.accessToken);\r\n//     //util.storedData(storageKeys.user, data.result?.user);\r\n//     //util.storedData(storageKeys.menus, data.result?.menus);\r\n//     return data;\r\n//   }\r\n//   catch (err) {\r\n//     console.log(\"Calling Refresh Token Failed\", err);\r\n//     return {\r\n//       isSuccess: false,\r\n//       result: null,\r\n//       message: \"\",\r\n//       resultCode: 500\r\n//     }\r\n//   }\r\n// }\r\nconst apiAxiosInstance = Axios.create({\r\n  baseURL: localStorage.getItem(\"server\")??\"\",//config.apiUrl,\r\n  withCredentials: false,//true,\r\n  timeout: config.requestTimeout,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"ngrok-skip-browser-warning\": \"skip-browser-warning\",\r\n    //\"Access-Control-Allow-Credentials\": \"*\",\r\n  },\r\n});\r\n\r\nconst onRequest = (config: AxiosRequestConfig): AxiosRequestConfig => {\r\n  console.warn(\"TODO:// Remove line below after tests\")\r\n  config.url = `${localStorage.getItem(\"server\")}${config.url}`;\r\n  let jwtToken = util.getStoredData(storageKeys.token);\r\n  if (jwtToken && config.headers)\r\n    config.headers.Authorization = `Bearer ${jwtToken}`;\r\n  return config;\r\n};\r\n\r\nconst onRequestError = (error: AxiosError): Promise<AxiosError> => {\r\n  //console.error(`[request error] [${JSON.stringify(error)}]`);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst onResponse = (response: AxiosResponse): AxiosResponse => {\r\n  //console.info(`[response] [${JSON.stringify(response)}]`);\r\n  return response;\r\n};\r\n\r\nconst onResponseError = async (error: AxiosError): Promise<AxiosError> => {\r\n  const originalRequest = error.config;\r\n  // if (originalRequest && error.response?.status === 401 &&\r\n  //   error.response.data &&\r\n  //   (error.response.data as Response<any>).resultCode === 1001\r\n  //   && !originalRequest.headers?.retry) {\r\n  //   let callRefreshToken = await getRefeshToken();\r\n  //   if (!callRefreshToken.isSuccess) {\r\n  //     return Promise.reject(error);\r\n  //   }\r\n  //   originalRequest.headers = {\r\n  //     ...originalRequest.headers,\r\n  //     Authorization: `Bearer ${callRefreshToken.result?.jwtToken.token}`,\r\n  //     retry: true\r\n  //   };\r\n  //   return apiAxiosInstance(originalRequest);\r\n  // }\r\n  return Promise.reject(error);\r\n};\r\napiAxiosInstance.interceptors.request.use(onRequest, onRequestError);\r\napiAxiosInstance.interceptors.response.use(onResponse, onResponseError);\r\nexport default apiAxiosInstance;\r\n","import { message } from \"antd\";\r\nimport { AxiosError } from \"axios\";\r\nimport apiAxios from \"config/api\";\r\nimport util from \"config/utils\";\r\nimport { TResponse } from \"models\";\r\nimport {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useEffect,\r\n  useState,\r\n  useTransition,\r\n} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useCache from \"./useCache\";\r\n\r\ninterface ActionType {\r\n  get: (url: string) => void;\r\n  post: (url: string, data?: unknown, widthFile?: boolean) => void;\r\n  put: (url: string, data?: unknown) => void;\r\n  delete: (url: string, data?: unknown) => void;\r\n  download: (url: string, data?: unknown) => void;\r\n}\r\ninterface Options<T, MapedT = void> {\r\n  initialValue?: T;\r\n  initLoading?: boolean;\r\n  autoCallUrl?: string;\r\n  cachingLifeTimeInSeconds?: number;\r\n  customErrorHandler?: (err: Error) => void;\r\n  filter?: (res: T | null) => T;\r\n  onSuccess?: (res: T | MapedT | null, params?: any) => void;\r\n  onFailed?: (res: Error, data?: any) => void;\r\n  mapper?: (data: T | null) => MapedT;\r\n}\r\n\r\nconst useApi = <T, MapedT = never>(\r\n  options?: Options<T, MapedT>\r\n): [\r\n  ActionType,\r\n  boolean,\r\n  T | MapedT | null,\r\n  Dispatch<SetStateAction<T | MapedT | null>>\r\n] => {\r\n  const [loading, toggle] = useState<boolean>(options?.initLoading ?? false);\r\n  const [data, setData] = useState<T | MapedT | null>(\r\n    options?.initialValue ?? null\r\n  );\r\n  const { t } = useTranslation();\r\n  const cache = useCache();\r\n  const [isPending, startTransition] = useTransition();\r\n  const afterCall = (result: T | null, params?: any) => {\r\n    startTransition(() => {\r\n      let filteredData = options?.filter ? options?.filter(result) : result;\r\n      let mapedData = options?.mapper\r\n        ? options?.mapper(filteredData)\r\n        : filteredData;\r\n      setData(mapedData);\r\n      options?.onSuccess?.(mapedData, params);\r\n    });\r\n  };\r\n  const errorHandler = (err: Error, status?: number, resultCode?: number) => {\r\n    if (!options?.customErrorHandler) {\r\n      console.log(\"api error is\",err);\r\n      message.error(err?.message);\r\n    } else options?.customErrorHandler(err);\r\n    if (status === 401) {\r\n      util.clearStorage();\r\n      window.location.href = \"/\";\r\n    }\r\n  };\r\n  const mutate: ActionType = {\r\n    get: async (url: string) => {\r\n      toggle(true);\r\n      try {\r\n        if (\r\n          options?.cachingLifeTimeInSeconds\r\n        ) {\r\n          let cachedResponse = await cache.get(url);\r\n          if (cachedResponse) {\r\n            afterCall(cachedResponse, { url });\r\n            toggle(false);\r\n            return;\r\n          }\r\n        }\r\n        let result = await apiAxios.get<TResponse<T>>(url);\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          if (options?.cachingLifeTimeInSeconds) {\r\n            cache.add(\r\n              url,\r\n              result.data.result,\r\n              options.cachingLifeTimeInSeconds\r\n            );\r\n          }\r\n          afterCall(result.data.result);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    post: async (url: string, params: any, withFile?: boolean) => {\r\n      toggle(true);\r\n      try {\r\n        let formData = null;\r\n        if (withFile) {\r\n          formData = new FormData();\r\n          for (let k in params) {\r\n            formData.append(k, params[k]);\r\n          }\r\n        }\r\n        let result = await apiAxios.post<TResponse<T>>(\r\n          url,\r\n          withFile ? formData : params,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": withFile\r\n                ? \"multipart/form-data\"\r\n                : \"application/Json\",\r\n            },\r\n          }\r\n        );\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          afterCall(result.data.result, params);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    put: async (url: string, params: any) => {\r\n      toggle(true);\r\n      try {\r\n        let result = await apiAxios.put<TResponse<T>>(url, params);\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          afterCall(result.data.result, params);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    delete: async (url: string, params: any) => {\r\n      toggle(true);\r\n      try {\r\n        let result = await apiAxios.delete<TResponse<T>>(\r\n          `${url}?${util.convertToQueryString(params)}`\r\n        );\r\n        if (!result.data.succeeded) {\r\n          let jsError = new Error(\r\n            result.data.messages[0] || (t(\"unknownError\") as string)\r\n          );\r\n          errorHandler(jsError);\r\n          options?.onFailed?.(jsError);\r\n        } else {\r\n          afterCall(result.data.result, params);\r\n        }\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n    download: async (url: string, params: any, fileName?: string) => {\r\n      toggle(true);\r\n      try {\r\n        let TResponse = await apiAxios.get(\r\n          `${url}?${util.convertToQueryString(params)}`,\r\n          {\r\n            responseType: \"blob\",\r\n          }\r\n        );\r\n        const href = URL.createObjectURL(TResponse.data);\r\n\r\n        // create \"a\" HTML element with href to file & click\r\n        const link = document.createElement(\"a\");\r\n        link.href = href;\r\n        if (!fileName) {\r\n          const disposition = TResponse.headers[\"content-disposition\"];\r\n          console.log(\"dis\", disposition, TResponse.headers);\r\n          fileName = disposition && disposition.match(/filename=\"(.+)\"/)?.[1];\r\n        }\r\n        link.setAttribute(\"download\", fileName ?? \"file.txt\"); //or any other extension\r\n        document.body.appendChild(link);\r\n        link.click();\r\n\r\n        // clean up \"a\" element & remove ObjectURL\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(href);\r\n      } catch (err) {\r\n        let axiosErr = err as AxiosError;\r\n        let jsError = new Error(axiosErr.message);\r\n        errorHandler(jsError, axiosErr.response?.status);\r\n        options?.onFailed?.(jsError);\r\n      } finally {\r\n        toggle(false);\r\n      }\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    if (options?.autoCallUrl) {\r\n      mutate.get(options?.autoCallUrl);\r\n    }\r\n  }, []);\r\n  return [\r\n    mutate,\r\n    isPending || loading,\r\n    data,\r\n    setData,\r\n  ];\r\n};\r\nexport default useApi;\r\n"],"names":["createContext","props","t","useTranslation","useApi","onSuccess","res","afterSelect","find","finding","loading","type","isMobile","shape","icon","CustomIcon","size","name","onClick","findUrl","get","record","idProp","Form","entryFrm","destroyOnClose","open","onCancel","title","onOk","submit","okButtonProps","width","entryModalWidth","id","layout","form","initialValues","onFinish","onEntrySubmit","autoComplete","EntryForm","data","Panel","Collapse","columns","filterUrl","addUrl","disablePaging","children","deleteAction","editAction","pageSize","handleSubmit","customActions","buttons","scrollX","filtersHeight","scrollY","enableRowNumber","filterFrm","useState","modal","toggleModal","collapsed","toggleCollapsed","selected","select","recordForRemove","toggleConfirmModal","innerColumns","setInnerColumns","page","paging","setPaging","pn","useRef","initLoading","filter","setData","_","params","onEditSuccess","edit","editing","newItem","onAddSuccess","add","adding","prop","s","totalEntitiesCount","results","x","del","deleting","useMemo","window","outerWidth","config","closeModal","map","onEdit","onDelete","actionsCol","length","count","align","key","fixed","dataIndex","render","text","index","items","push","label","danger","concat","idx","renderer","action","menu","e","preventDefault","className","getData","util","toString","useEffect","getFieldsValue","columnsList","list","c","undefined","unshift","value","current","Page","defaultActiveKey","onChange","header","extra","stopPropagation","some","i","includes","htmlType","style","direction","rowKey","dataSource","pagination","filters","sorter","scroll","y","total","put","url","post","footer","delete","sendingProp","Paragraph","Typography","message","setTitle","useContext","SharedContext","FoundIcon","Io5Icons","BsIcons","FaIcons","MdIcons","addreses","account","login","organizationLevel","update","roleManager","userManager","roles","changeStatus","isEnabled","surfacewaterpermit","similar","URLSearchParams","springWaterPermit","pondWaterPermit","wellWaterPermit","locations","counties","districs","countyId","cities","districtId","ruralDistricts","villages","ruralDistrictId","apiAxiosInstance","Axios","baseURL","localStorage","getItem","withCredentials","timeout","headers","Accept","onResponseError","error","Promise","reject","interceptors","request","use","console","warn","jwtToken","storageKeys","Authorization","response","options","toggle","initialValue","cache","useCache","useTransition","isPending","startTransition","afterCall","result","filteredData","mapedData","mapper","errorHandler","err","status","resultCode","customErrorHandler","log","location","href","mutate","cachingLifeTimeInSeconds","cachedResponse","apiAxios","succeeded","jsError","Error","messages","onFailed","axiosErr","withFile","formData","k","FormData","append","download","fileName","responseType","TResponse","URL","createObjectURL","link","document","createElement","disposition","match","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","autoCallUrl"],"sourceRoot":""}