{"version":3,"file":"static/js/5.813ea164.chunk.js","mappings":"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","sources":["hooks/useLocation.ts","components/panel/shared/AddressInputs.tsx","context/AdminPageContext.tsx","components/panel/shared/cells/EditAction.tsx","components/panel/shared/EntryFromModal.tsx","components/panel/shared/cells/DeleteAction.tsx","components/panel/shared/AdminPage.tsx","components/panel/shared/ConfirmModal.tsx","components/panel/shared/cells/NumberCell.tsx","config/patterns.ts"],"sourcesContent":["import { FormInstance } from \"antd\";\r\nimport addreses from \"config/api/addresses\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { TLocation } from \"models\";\r\nimport { TSourceLocation } from \"models/waterPermit\";\r\ninterface IUseLocation {\r\n  entryFrm: FormInstance;\r\n  location?: TSourceLocation | null;\r\n  namePrefix?: string;\r\n}\r\nconst useLocation = ({ location, entryFrm, namePrefix }: IUseLocation) => {\r\n  const [getCounties, loadingCounties, counties] = useApi<TLocation[]>({\r\n    autoCallUrl: addreses.locations.counties,\r\n    cachingLifeTimeInSeconds: 60,\r\n  });\r\n  const [getDistricts, loadingDistricts, districts] = useApi<TLocation[]>({\r\n    cachingLifeTimeInSeconds: 60,\r\n    autoCallUrl: location?.countyId\r\n      ? addreses.locations.districs(location?.countyId.toString())\r\n      : undefined,\r\n  });\r\n  const [getCities, loadingCities, cities] = useApi<TLocation[]>({\r\n    cachingLifeTimeInSeconds: 60,\r\n    autoCallUrl: location?.districtId\r\n      ? addreses.locations.cities(location?.districtId.toString())\r\n      : undefined,\r\n  });\r\n  const [getRuralDistricts, loadingRuralDistricts, ruralDistricts] = useApi<\r\n    TLocation[]\r\n  >({\r\n    cachingLifeTimeInSeconds: 60,\r\n    autoCallUrl: location?.districtId\r\n      ? addreses.locations.ruralDistricts(location?.districtId.toString())\r\n      : undefined,\r\n  });\r\n  const [getVillages, loadingVillages, villages] = useApi<TLocation[]>({\r\n    cachingLifeTimeInSeconds: 60,\r\n    autoCallUrl: location?.ruralDistrictId\r\n      ? addreses.locations.villages(location?.ruralDistrictId.toString())\r\n      : undefined,\r\n  });\r\n  const onCountyChanged = (value: any) => {\r\n    entryFrm.resetFields([\r\n      namePrefix ? [namePrefix, \"districtId\"] : \"districtId\",\r\n      namePrefix ? [namePrefix, \"cityId\"] : \"cityId\",\r\n      namePrefix ? [namePrefix, \"ruralDistrictId\"] : \"ruralDistrictId\",\r\n      namePrefix ? [namePrefix, \"villageId\"] : \"villageId\",\r\n    ]);\r\n    const test = entryFrm.getFieldInstance(namePrefix ? [namePrefix, \"districtId\"] : \"districtId\");\r\n    entryFrm.setFieldValue(\r\n      namePrefix ? [namePrefix, \"districtId\"] : \"districtId\",\r\n      \"\"\r\n    );\r\n    entryFrm.setFieldValue(namePrefix ? [namePrefix, \"cityId\"] : \"cityId\", \"\");\r\n    entryFrm.setFieldValue(\r\n      namePrefix ? [namePrefix, \"ruralDistrictId\"] : \"ruralDistrictId\",\r\n      \"\"\r\n    );\r\n    entryFrm.setFieldValue(\r\n      namePrefix ? [namePrefix, \"villageId\"] : \"villageId\",\r\n      \"\"\r\n    );\r\n    if (value !== \"\") {\r\n      getDistricts.get(addreses.locations.districs(value));\r\n    }\r\n  };\r\n  const onDistrictChanged = (value: any) => {\r\n    entryFrm.resetFields([\r\n      namePrefix ? [namePrefix, \"cityId\"] : \"cityId\",\r\n      namePrefix ? [namePrefix, \"ruralDistrictId\"] : \"ruralDistrictId\",\r\n      namePrefix ? [namePrefix, \"villageId\"] : \"villageId\",\r\n    ]);\r\n    entryFrm.setFieldValue(namePrefix ? [namePrefix, \"cityId\"] : \"cityId\", \"\");\r\n    entryFrm.setFieldValue(\r\n      namePrefix ? [namePrefix, \"ruralDistrictId\"] : \"ruralDistrictId\",\r\n      \"\"\r\n    );\r\n    entryFrm.setFieldValue(\r\n      namePrefix ? [namePrefix, \"villageId\"] : \"villageId\",\r\n      \"\"\r\n    );\r\n    if (value !== \"\") {\r\n      getCities.get(addreses.locations.cities(value));\r\n      getRuralDistricts.get(addreses.locations.ruralDistricts(value));\r\n    }\r\n  };\r\n  const onRuralDistrictsChanged = (value: any) => {\r\n    entryFrm.resetFields([\r\n      namePrefix ? [namePrefix, \"villageId\"] : \"villageId\",\r\n    ]);\r\n    entryFrm.setFieldValue(\r\n      namePrefix ? [namePrefix, \"villageId\"] : \"villageId\",\r\n      \"\"\r\n    );\r\n    if (value !== \"\") {\r\n      getVillages.get(addreses.locations.villages(value));\r\n    }\r\n  };\r\n  return {\r\n    loadingCounties,\r\n    counties,\r\n    onCountyChanged,\r\n    loadingDistricts,\r\n    districts,\r\n    onDistrictChanged,\r\n    loadingCities,\r\n    cities,\r\n    getRuralDistricts,\r\n    loadingRuralDistricts,\r\n    ruralDistricts,\r\n    onRuralDistrictsChanged,\r\n    loadingVillages,\r\n    villages,\r\n  };\r\n};\r\nexport default useLocation;\r\n","import { Form as AntForm, Col, Select } from \"antd\";\r\nimport useLocation from \"hooks/useLocation\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\ninterface IAddressInputProps {\r\n  entryFrm: any;\r\n  namePrefix?: string;\r\n  data: any;\r\n  readOnly?: boolean;\r\n  hideIfCityIdSelected?: boolean;\r\n}\r\nconst AddressInput = ({\r\n  entryFrm,\r\n  data,\r\n  namePrefix,\r\n  readOnly,\r\n  hideIfCityIdSelected,\r\n}: IAddressInputProps) => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    loadingCounties,\r\n    counties,\r\n    onCountyChanged,\r\n    loadingDistricts,\r\n    districts,\r\n    onDistrictChanged,\r\n    loadingCities,\r\n    cities,\r\n    loadingRuralDistricts,\r\n    ruralDistricts,\r\n    onRuralDistrictsChanged,\r\n    loadingVillages,\r\n    villages,\r\n  } = useLocation({\r\n    entryFrm,\r\n    location: data,\r\n    namePrefix,\r\n  });\r\n  const [cityId, setCityId] = useState<number | undefined | null>(data?.cityId);\r\n  return (\r\n    <>\r\n      <Col xs={12} sm={8} md={6}>\r\n        <AntForm.Item\r\n          name={namePrefix ? [namePrefix, \"countyId\"] : \"countyId\"}\r\n          label={t(\"county\")}\r\n        >\r\n          <Select\r\n            allowClear\r\n            showSearch\r\n            placeholder={t(\"county\")}\r\n            loading={loadingCounties}\r\n            onChange={onCountyChanged}\r\n            disabled={readOnly}\r\n            options={[\r\n              {\r\n                label: t(\"selcet\"),\r\n                value: \"\",\r\n              },\r\n              ...(counties?.map((x) => ({\r\n                label: x.name,\r\n                value: x.id,\r\n              })) ?? []),\r\n            ]}\r\n          />\r\n        </AntForm.Item>\r\n      </Col>\r\n      <Col xs={12} sm={8} md={6}>\r\n        <AntForm.Item\r\n          name={namePrefix ? [namePrefix, \"districtId\"] : \"districtId\"}\r\n          label={t(\"district\")}\r\n        >\r\n          <Select\r\n            allowClear\r\n            showSearch\r\n            placeholder={t(\"district\")}\r\n            loading={loadingDistricts}\r\n            onChange={onDistrictChanged}\r\n            disabled={readOnly}\r\n            options={[\r\n              {\r\n                label: t(\"selcet\"),\r\n                value: \"\",\r\n              },\r\n              ...(districts?.map((x) => ({\r\n                label: x.name,\r\n                value: x.id,\r\n              })) ?? []),\r\n            ]}\r\n          />\r\n        </AntForm.Item>\r\n      </Col>\r\n      <Col xs={12} sm={8} md={6}>\r\n        <AntForm.Item\r\n          name={namePrefix ? [namePrefix, \"cityId\"] : \"cityId\"}\r\n          label={t(\"city\")}\r\n        >\r\n          <Select\r\n            allowClear\r\n            showSearch\r\n            placeholder={t(\"city\")}\r\n            loading={loadingCities}\r\n            disabled={readOnly}\r\n            onChange={setCityId}\r\n            options={[\r\n              {\r\n                label: t(\"selcet\"),\r\n                value: \"\",\r\n              },\r\n              ...(cities?.map((x) => ({\r\n                label: x.name,\r\n                value: x.id,\r\n              })) ?? []),\r\n            ]}\r\n          />\r\n        </AntForm.Item>\r\n      </Col>\r\n      {cityId && hideIfCityIdSelected ? null : (\r\n        <>\r\n          <Col xs={12} sm={8} md={6}>\r\n            <AntForm.Item\r\n              name={\r\n                namePrefix ? [namePrefix, \"ruralDistrictId\"] : \"ruralDistrictId\"\r\n              }\r\n              label={t(\"rural\")}\r\n            >\r\n              <Select\r\n                allowClear\r\n                showSearch\r\n                placeholder={t(\"rural\")}\r\n                loading={loadingRuralDistricts}\r\n                onChange={onRuralDistrictsChanged}\r\n                disabled={readOnly}\r\n                options={[\r\n                  {\r\n                    label: t(\"selcet\"),\r\n                    value: \"\",\r\n                  },\r\n                  ...(ruralDistricts?.map((x) => ({\r\n                    label: x.name,\r\n                    value: x.id,\r\n                  })) ?? []),\r\n                ]}\r\n              />\r\n            </AntForm.Item>\r\n          </Col>\r\n          <Col xs={12} sm={8} md={6}>\r\n            <AntForm.Item\r\n              name={namePrefix ? [namePrefix, \"villageId\"] : \"villageId\"}\r\n              label={t(\"village\")}\r\n            >\r\n              <Select\r\n                allowClear\r\n                showSearch\r\n                placeholder={t(\"village\")}\r\n                loading={loadingVillages}\r\n                disabled={readOnly}\r\n                options={[\r\n                  {\r\n                    label: t(\"selcet\"),\r\n                    value: \"\",\r\n                  },\r\n                  ...(villages?.map((x) => ({\r\n                    label: x.name,\r\n                    value: x.id,\r\n                  })) ?? []),\r\n                ]}\r\n              />\r\n            </AntForm.Item>\r\n          </Col>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AddressInput;\r\n","import { FormInstance } from \"antd\";\r\nimport { createContext } from \"react\";\r\nconst AdminPageContext = createContext<{\r\n    form?: FormInstance\r\n}>({});\r\nexport default AdminPageContext;","import { Button } from \"antd\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IEditAction {\r\n  findUrl?: string | ((record: any) => string);\r\n  record: any;\r\n  idProp: string;\r\n  afterSelect: (record: any) => void;\r\n  isMobile?: boolean;\r\n}\r\nconst EditAction = (props: IEditAction) => {\r\n  const { t } = useTranslation();\r\n  const [find, finding] = useApi<any>({\r\n    onSuccess: (res) => {\r\n      props.afterSelect(res);\r\n    },\r\n  });\r\n  const onClick = () => {\r\n    if (props.findUrl) {\r\n      const url =\r\n        typeof props.findUrl === \"string\"\r\n          ? `${props.findUrl}?${props.idProp}=${\r\n              props.record[props.idProp as keyof typeof props.record]\r\n            }`\r\n          : props.findUrl(props.record);\r\n      find.get(url);\r\n    } else {\r\n      props.afterSelect(props.record);\r\n    }\r\n  };\r\n  return (\r\n    <Button\r\n      loading={finding}\r\n      type={props.isMobile ? \"ghost\" : \"primary\"}\r\n      shape={props.isMobile ? \"default\" : \"circle\"}\r\n      icon={\r\n        props.isMobile?undefined:<CustomIcon size={props.isMobile ? 20 : 10} name=\"IoPencilOutline\" />\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {props.isMobile ? t(\"edit\") : null}\r\n    </Button>\r\n  );\r\n};\r\nexport default EditAction;\r\n","import { Form, Modal } from \"antd\";\r\nimport { ElementType } from \"react\";\r\ninterface IEntryForm<T> {\r\n  onCancel: () => void;\r\n  title: string;\r\n  entryModalWidth?: number;\r\n  initialValues?: any;\r\n  loading?: boolean;\r\n  EntryForm: ElementType;\r\n  onEntrySubmit?: (values: T) => void;\r\n}\r\nconst EntryFormModal = <T,>(props: IEntryForm<T>) => {\r\n  const [entryFrm] = Form.useForm();\r\n  const onOk = () => {\r\n    entryFrm.submit();\r\n  };\r\n  return (\r\n    <Modal\r\n      destroyOnClose\r\n      open={true}\r\n      onCancel={props.onCancel}\r\n      title={props.title}\r\n      onOk={onOk}\r\n      okButtonProps={{ loading: props.loading }}\r\n      width={props.entryModalWidth}\r\n    >\r\n      <Form\r\n        id=\"entry-form\"\r\n        layout=\"vertical\"\r\n        form={entryFrm}\r\n        initialValues={props.initialValues}\r\n        onFinish={props.onEntrySubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <props.EntryForm form={entryFrm} data={props.initialValues} />\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default EntryFormModal;\r\n","import { Button } from \"antd\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IEditAction {\r\n  onClick: () => void;\r\n  isMobile?: boolean;\r\n}\r\nconst DeleteAction = (props: IEditAction) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Button\r\n      danger\r\n      type={props.isMobile ? \"ghost\" : \"primary\"}\r\n      shape={props.isMobile ? \"default\" : \"circle\"}\r\n      icon={\r\n        props.isMobile?undefined:<CustomIcon size={props.isMobile ? 20 : 10} name=\"IoTrashOutline\" />\r\n      }\r\n      onClick={props.onClick}\r\n    >\r\n      {props.isMobile ? t(\"delete\") : null}\r\n    </Button>\r\n  );\r\n};\r\nexport default DeleteAction;\r\n","import { Button, Collapse, Dropdown, Form, Modal, Space, Table } from \"antd\";\r\nimport type {\r\n  ColumnType,\r\n  ColumnsType,\r\n  TablePaginationConfig,\r\n} from \"antd/es/table\";\r\nimport type { FilterValue, SorterResult } from \"antd/es/table/interface\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport config from \"config\";\r\nimport util from \"config/utils\";\r\nimport AdminPageContext from \"context/AdminPageContext\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { PagedData, PagedListUpdater } from \"models\";\r\nimport {\r\n  CSSProperties,\r\n  ElementType,\r\n  MouseEvent,\r\n  ReactNode,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DeleteConfirmModal from \"./ConfirmModal\";\r\nimport Page from \"./Page\";\r\nimport EditAction from \"./cells/EditAction\";\r\nimport EntryFormModal from \"./EntryFromModal\";\r\nimport DeleteAction from \"./cells/DeleteAction\";\r\n\r\nconst { Panel } = Collapse;\r\ninterface DeleteAction {\r\n  icon?: string;\r\n  url: string | ((record: any) => string);\r\n  confirmMessage?: string;\r\n  sendingProp?: string;\r\n}\r\ntype EditAction = {\r\n  icon?: string;\r\n  url: string;\r\n};\r\ninterface ActionColumn<T> {\r\n  icon?: string;\r\n  renderer?: (\r\n    text: string,\r\n    record: T,\r\n    setData: PagedListUpdater<T>,\r\n    isMobile?: boolean\r\n  ) => ReactNode;\r\n  action?: (record: T, setData: PagedListUpdater<T>) => void;\r\n}\r\ninterface AdminPageProps<T> {\r\n  title: string;\r\n  id?: string;\r\n  idProp: string;\r\n  children: ReactNode;\r\n  EntryForm?: ElementType;\r\n  filterUrl: string;\r\n  addUrl?: string;\r\n  findUrl?: string | ((record: T) => string);\r\n  columns: ColumnsType<T>;\r\n  disablePaging?: boolean;\r\n  pageSize?: number;\r\n  initialValues?: any;\r\n  deleteAction?: DeleteAction;\r\n  editAction?: EditAction;\r\n  handleSubmit?: boolean;\r\n  checkIsMerchant?: boolean;\r\n  enableRowNumber?: boolean;\r\n  buttons?: {\r\n    onClick: (e: MouseEvent<HTMLElement>, data: any) => void;\r\n    className?: string;\r\n    loading?: boolean;\r\n    children: ReactNode;\r\n    style?: CSSProperties;\r\n    type?: \"default\" | \"link\" | \"text\" | \"ghost\" | \"primary\" | \"dashed\";\r\n  }[];\r\n  customActions?: ActionColumn<T>[];\r\n  scrollX?: string | number;\r\n  filtersHeight?: number;\r\n  scrollY?: number;\r\n  entryModalWidth?: number;\r\n}\r\n\r\nconst AdminPage = <DataType extends Object>({\r\n  id,\r\n  title,\r\n  columns,\r\n  idProp,\r\n  filterUrl,\r\n  findUrl,\r\n  addUrl,\r\n  initialValues,\r\n  disablePaging,\r\n  EntryForm,\r\n  children,\r\n  deleteAction,\r\n  editAction,\r\n  pageSize = 15,\r\n  handleSubmit = true,\r\n  customActions,\r\n  buttons,\r\n  scrollX = \"1500px\",\r\n  filtersHeight,\r\n  scrollY,\r\n  entryModalWidth,\r\n  enableRowNumber = true,\r\n}: AdminPageProps<DataType>) => {\r\n  const { t } = useTranslation();\r\n  const [filterFrm] = Form.useForm();\r\n\r\n  const [modal, toggleModal] = useState(false);\r\n  const [collapsed, toggleCollapsed] = useState(true);\r\n  const [selected, select] = useState<DataType | null>(null);\r\n  const [recordForRemove, toggleConfirmModal] = useState<DataType | null>(null);\r\n  const [innerColumns, setInnerColumns] = useState(columns);\r\n  const [paging, setPaging] = useState({\r\n    page: 1,\r\n    pageSize: pageSize,\r\n  });\r\n  const pn = useRef<number>(1);\r\n  const [filter, loading, data, setData] = useApi<PagedData<DataType>>({\r\n    initLoading: true,\r\n  });\r\n  const [edit, editing] = useApi<any>({\r\n    onSuccess: (_, params) => {\r\n      onEditSuccess(params);\r\n    },\r\n  });\r\n  const [add, adding] = useApi<any>({\r\n    onSuccess: (newItem, params) => {\r\n      onAddSuccess(params?{ ...params, ...newItem }:newItem);\r\n    },\r\n  });\r\n  const [del, deleting] = useApi<boolean>({\r\n    onSuccess: (res, params) => {\r\n      let prop = idProp as keyof DataType;\r\n      let id = params?.[prop];\r\n      if (id)\r\n        setData(\r\n          (s) =>\r\n            ({\r\n              ...s,\r\n              totalEntitiesCount: s?.totalEntitiesCount ?? 1 - 1,\r\n              results: s?.results.filter((x) => x[prop] !== id),\r\n            } as PagedData<DataType>)\r\n        );\r\n      toggleConfirmModal(null);\r\n    },\r\n  });\r\n  const isMobile = useMemo(() => window.outerWidth < config.breakpoints.xl, []);\r\n  const onEditSuccess = (params: any, closeModal: boolean = true) => {\r\n    let prop = idProp as keyof DataType;\r\n    let id = params?.[prop];\r\n    if (id)\r\n      setData(\r\n        (s) =>\r\n          ({\r\n            ...s,\r\n            results: s?.results.map((x) =>\r\n              x[prop] === id\r\n                ? {\r\n                    ...x,\r\n                    ...params,\r\n                  }\r\n                : x\r\n            ),\r\n          } as PagedData<DataType>)\r\n      );\r\n    if (closeModal) toggleModal(false);\r\n  };\r\n  const onAddSuccess = (newItem: DataType, closeModal: boolean = true) => {\r\n    let prop = idProp as keyof DataType;\r\n    let id = newItem?.[prop];\r\n    if (id)\r\n      setData(\r\n        (s) =>\r\n          ({\r\n            ...s,\r\n            totalEntitiesCount: s?.totalEntitiesCount ?? 0 + 1,\r\n            results: [newItem, ...(s?.results ?? [])],\r\n          } as PagedData<DataType>)\r\n      );\r\n    if (closeModal) toggleModal(false);\r\n  };\r\n  const onEdit = (record: DataType) => {\r\n    select(record);\r\n    toggleModal(true);\r\n  };\r\n  const onDelete = (record: DataType) => {\r\n    toggleConfirmModal(record);\r\n  };\r\n  const handleDelete = () => {\r\n    if (!!recordForRemove && !!deleteAction) {\r\n      if (\r\n        typeof deleteAction?.url !== \"string\" &&\r\n        ~deleteAction?.url(recordForRemove).indexOf(\"?\")\r\n      ) {\r\n        throw new Error(\"delete url cannot have query strings\");\r\n      }\r\n      const url =\r\n        typeof deleteAction?.url === \"string\"\r\n          ? `${deleteAction.url}`\r\n          : deleteAction?.url(recordForRemove);\r\n      del.delete(url, {\r\n        [deleteAction?.sendingProp ?? idProp]:\r\n          recordForRemove[\r\n            (deleteAction?.sendingProp ?? idProp) as keyof DataType\r\n          ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const actionsCol = useMemo((): ColumnType<DataType> | null => {\r\n    if (\r\n      (!customActions || !customActions.length) &&\r\n      !editAction &&\r\n      !deleteAction\r\n    )\r\n      return null;\r\n    const count =\r\n      (customActions?.length ?? 0) +\r\n      (!!editAction ? 1 : 0) +\r\n      (!!deleteAction ? 1 : 0);\r\n    return {\r\n      title: <CustomIcon name=\"IoBuildOutline\" />,\r\n      align: \"center\",\r\n      key: \"actions\",\r\n      fixed: \"right\",\r\n      width: isMobile ? 30 : count * 25 + 8 * (count - 1) + 40,\r\n      dataIndex: \"actions\",\r\n      render: function (text, record, index) {\r\n        if (isMobile) {\r\n          let items: any[] = [];\r\n          if (!!editAction) {\r\n            items.push({\r\n              key: \"edit\",\r\n              label: (\r\n                <EditAction\r\n                  findUrl={findUrl}\r\n                  afterSelect={onEdit}\r\n                  idProp={idProp}\r\n                  record={record}\r\n                  isMobile\r\n                />\r\n              ),\r\n            });\r\n          }\r\n          if (!!deleteAction) {\r\n            items.push({\r\n              key: \"delete\",\r\n              label: <DeleteAction isMobile onClick={() => onDelete(record)} />,\r\n            });\r\n          }\r\n          if (customActions?.length) {\r\n            items = items.concat(\r\n              customActions.map((x, idx) => ({\r\n                key: \"action-\" + idx,\r\n                label: x.renderer ? (\r\n                  x.renderer(text, record, setData, isMobile)\r\n                ) : (\r\n                  <Button\r\n                    key={idx}\r\n                    type={isMobile ? \"ghost\" : \"primary\"}\r\n                    shape={isMobile ? \"default\" : \"circle\"}\r\n                    icon={\r\n                      <CustomIcon\r\n                        size={isMobile ? 20 : 10}\r\n                        name={x.icon ?? \"BsDash\"}\r\n                      />\r\n                    }\r\n                    onClick={() => x.action?.(record, setData)}\r\n                  />\r\n                ),\r\n              }))\r\n            );\r\n          }\r\n          return (\r\n            <Dropdown menu={{ items }}>\r\n              <a onClick={(e) => e.preventDefault()}>\r\n                <CustomIcon name=\"FaEllipsisV\" />\r\n              </a>\r\n            </Dropdown>\r\n          );\r\n        }\r\n        return (\r\n          <Space className=\"actions\">\r\n            {!!editAction && (\r\n              <EditAction\r\n                findUrl={findUrl}\r\n                afterSelect={onEdit}\r\n                idProp={idProp}\r\n                record={record}\r\n              />\r\n            )}\r\n            {!!deleteAction && (\r\n              <DeleteAction onClick={() => onDelete(record)} />\r\n            )}\r\n            {!!customActions &&\r\n              customActions.map((x, idx) =>\r\n                x.renderer ? (\r\n                  x.renderer(text, record, setData)\r\n                ) : (\r\n                  <Button\r\n                    key={idx}\r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    icon={<CustomIcon size={10} name={x.icon ?? \"BsDash\"} />}\r\n                    onClick={() => x.action?.(record, setData)}\r\n                  />\r\n                )\r\n              )}\r\n          </Space>\r\n        );\r\n      },\r\n    };\r\n  }, [customActions]);\r\n\r\n  const onAdd = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    select(null);\r\n    toggleModal(true);\r\n  };\r\n  const getData = (data: any) => {\r\n    filter.get(\r\n      `${filterUrl}?${util\r\n        .convertToQueryString({ ...paging, ...data })\r\n        .toString()}`\r\n    );\r\n  };\r\n  const onFilter = (data: any) => {\r\n    setPaging((x) => ({ ...x, page: 1 }));\r\n    pn.current = 1;\r\n    if (\r\n      columns.length !== innerColumns.length ||\r\n      columns.some((x) => !innerColumns.map((i) => i.key).includes(x.key))\r\n    ) {\r\n      setInnerColumns(columns);\r\n    }\r\n    getData({ ...data, page: 1 });\r\n  };\r\n  const onEntrySubmit = (record: DataType) => {\r\n    if (editAction && selected) edit.put(editAction.url, record);\r\n    else if (addUrl && !selected) add.post(addUrl, record);\r\n  };\r\n  const onTableChange = (\r\n    pagination: TablePaginationConfig,\r\n    filters: Record<string, FilterValue | null>,\r\n    sorter: SorterResult<DataType> | SorterResult<DataType>[]\r\n  ) => {\r\n    setPaging({\r\n      page: pagination.current ?? 1,\r\n      pageSize: pagination.pageSize ?? 15,\r\n    });\r\n    pn.current = pagination.current ?? 1;\r\n    getData({\r\n      ...filterFrm.getFieldsValue(),\r\n      page: pagination.current ?? 1,\r\n    });\r\n  };\r\n  const onCancel = () => {\r\n    select(null);\r\n    toggleModal(false);\r\n  };\r\n  useEffect(() => {\r\n    getData(filterFrm.getFieldsValue());\r\n  }, []);\r\n  const columnsList = useMemo(() => {\r\n    let list = actionsCol\r\n      ? [\r\n          ...innerColumns\r\n            .filter((x) => x.key !== \"rowNumber\")\r\n            .map((c) => ({\r\n              ...c,\r\n              fixed:\r\n                window.outerWidth < config.breakpoints.lg ? undefined : c.fixed,\r\n            })),\r\n          actionsCol,\r\n        ]\r\n      : innerColumns.filter((x) => x.key !== \"rowNumber\");\r\n    if (enableRowNumber) {\r\n      list.unshift({\r\n        key: \"rowNumber\",\r\n        title: \"#\",\r\n        width: 80,\r\n        fixed: window.outerWidth < config.breakpoints.lg ? undefined : \"left\",\r\n        render: (value, record, index) => {\r\n          return <span>{(pn.current - 1) * paging.pageSize + index + 1}</span>;\r\n        },\r\n      });\r\n    }\r\n    return list;\r\n  }, [innerColumns]);\r\n  return (\r\n    <AdminPageContext.Provider value={{ form: filterFrm }}>\r\n      <Page id={id} title={title} className=\"admin\">\r\n        <Collapse\r\n          defaultActiveKey={[\"filters\"]}\r\n          onChange={() => toggleCollapsed((s) => !s)}\r\n          //onChange={onChange}\r\n          //expandIconPosition={expandIconPosition}\r\n        >\r\n          <Panel\r\n            header={t(\"filters\")}\r\n            key=\"filters\"\r\n            extra={\r\n              !addUrl ? null : (\r\n                <Button\r\n                  icon={<CustomIcon name=\"IoAdd\" />}\r\n                  onClick={onAdd}\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  title={t(\"add\") ?? \"\"}\r\n                >\r\n                  <small>{t(\"add\")}</small>\r\n                </Button>\r\n              )\r\n            }\r\n          >\r\n            <Form\r\n              name=\"filters\"\r\n              form={filterFrm}\r\n              initialValues={initialValues}\r\n              onFinish={onFilter}\r\n              autoComplete=\"off\"\r\n            >\r\n              {children}\r\n              <Form.Item className=\"flex-row-end btns\">\r\n                {buttons?.map((x) => (\r\n                  <Button\r\n                    type={\"primary\" ?? x.type}\r\n                    htmlType=\"button\"\r\n                    style={x.style}\r\n                    className={x.className}\r\n                    onClick={(e) => x.onClick(e, filterFrm.getFieldsValue())}\r\n                  >\r\n                    {x.children}\r\n                  </Button>\r\n                ))}\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  {t(\"filter\")}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Panel>\r\n        </Collapse>\r\n        <Table\r\n          loading={loading}\r\n          direction=\"rtl\"\r\n          rowKey={idProp}\r\n          key={`table-${idProp}`}\r\n          columns={columnsList}\r\n          dataSource={data === null ? undefined : [...data.results]}\r\n          onChange={onTableChange}\r\n          scroll={{\r\n            x: scrollX,\r\n            y: scrollY\r\n              ? scrollY + (collapsed ? 0 : filtersHeight ?? 0)\r\n              : scrollY,\r\n          }}\r\n          pagination={\r\n            disablePaging\r\n              ? undefined\r\n              : {\r\n                  pageSize: paging.pageSize,\r\n                  current: paging.page,\r\n                  total: data?.totalEntitiesCount,\r\n                }\r\n          }\r\n        />\r\n        {!!EntryForm &&\r\n          (handleSubmit ? (\r\n            modal ? (\r\n              <EntryFormModal<DataType>\r\n                EntryForm={EntryForm}\r\n                onCancel={onCancel}\r\n                onEntrySubmit={onEntrySubmit}\r\n                entryModalWidth={entryModalWidth}\r\n                title={selected ? t(\"edit\") : t(\"add\")}\r\n                initialValues={selected ?? undefined}\r\n                loading={adding || editing}\r\n              />\r\n            ) : null\r\n          ) : modal ? (\r\n            <Modal\r\n              destroyOnClose\r\n              open={true}\r\n              onCancel={onCancel}\r\n              title={selected ? t(\"edit\") : t(\"add\")}\r\n              footer={null}\r\n              width={entryModalWidth}\r\n            >\r\n              <EntryForm\r\n                onCancel={() => toggleModal(false)}\r\n                data={selected}\r\n                onSuccess={selected ? onEditSuccess : onAddSuccess}\r\n              />\r\n            </Modal>\r\n          ) : null)}\r\n        <DeleteConfirmModal\r\n          open={!!recordForRemove}\r\n          loading={deleting}\r\n          onOk={handleDelete}\r\n          onCancel={() => toggleConfirmModal(null)}\r\n        />\r\n      </Page>\r\n    </AdminPageContext.Provider>\r\n  );\r\n};\r\nexport default AdminPage;\r\n","import { Modal, Typography } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst { Paragraph } = Typography;\r\ninterface DeleteConfirmProps {\r\n    loading?: boolean;\r\n    title?:string;\r\n    message?: string;\r\n    open: boolean;\r\n    onOk: () => void;\r\n    onCancel: () => void;\r\n}\r\nconst ConfirmModal = ({ open, onOk, loading, onCancel,title, message }: DeleteConfirmProps) => {\r\n    const { t } = useTranslation();\r\n    return <Modal\r\n        title={title??t(\"delete\")}\r\n        open={open}\r\n        onOk={onOk}\r\n        onCancel={onCancel}\r\n        okButtonProps={{ danger: true, loading }}>\r\n        <Paragraph>{message ? message : t(\"areYouSure\")}</Paragraph>\r\n    </Modal>\r\n}\r\nexport default ConfirmModal;","import util from \"config/utils\";\r\n\r\nconst NumberCell = ({\r\n  value,\r\n  enabelCopy = true,\r\n}: {\r\n  value: any;\r\n  enabelCopy?: boolean;\r\n}) => {\r\n  return (\r\n    <span\r\n      onClick={enabelCopy ? () => util.copyToClipboard(value) : undefined}\r\n      title={value}\r\n    >\r\n      {util.commaThousondSeperator(\r\n        typeof value === \"string\" ? parseFloat(value) : value\r\n      )}\r\n    </span>\r\n  );\r\n};\r\nexport default NumberCell;\r\n","const patterns = {\r\n  nationalCode: /\\d{10}/,\r\n  personelId: /\\d{4}/,\r\n  email: /\\S+@\\S+\\.\\S+/,\r\n  mobile: /09[0-9]{2}(-| )?[0-9]{3}(-| )?[0-9]{4}/,\r\n  phone: /0\\d{10}/,\r\n  ip: /(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/,\r\n  postalCode:/\\d{10}/,\r\n  url: /https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)/,\r\n};\r\nexport default patterns;\r\n"],"names":["location","entryFrm","namePrefix","useApi","autoCallUrl","addreses","cachingLifeTimeInSeconds","loadingCounties","counties","countyId","toString","undefined","getDistricts","loadingDistricts","districts","districtId","getCities","loadingCities","cities","getRuralDistricts","loadingRuralDistricts","ruralDistricts","ruralDistrictId","getVillages","loadingVillages","villages","onCountyChanged","value","resetFields","getFieldInstance","setFieldValue","get","onDistrictChanged","onRuralDistrictsChanged","data","readOnly","hideIfCityIdSelected","t","useTranslation","useLocation","useState","cityId","setCityId","xs","sm","md","name","label","allowClear","showSearch","placeholder","loading","onChange","disabled","options","map","x","id","createContext","props","onSuccess","res","afterSelect","find","finding","type","isMobile","shape","icon","CustomIcon","size","onClick","findUrl","url","idProp","record","Form","destroyOnClose","open","onCancel","title","onOk","submit","okButtonProps","width","entryModalWidth","layout","form","initialValues","onFinish","onEntrySubmit","autoComplete","EntryForm","danger","Panel","Collapse","columns","filterUrl","addUrl","disablePaging","children","deleteAction","editAction","pageSize","handleSubmit","customActions","buttons","scrollX","filtersHeight","scrollY","enableRowNumber","filterFrm","modal","toggleModal","collapsed","toggleCollapsed","selected","select","recordForRemove","toggleConfirmModal","innerColumns","setInnerColumns","page","paging","setPaging","pn","useRef","initLoading","filter","setData","_","params","onEditSuccess","edit","editing","newItem","onAddSuccess","add","adding","prop","s","totalEntitiesCount","results","del","deleting","useMemo","window","outerWidth","config","closeModal","onEdit","onDelete","actionsCol","length","count","align","key","fixed","dataIndex","render","text","index","items","push","concat","idx","renderer","action","menu","e","preventDefault","className","getData","util","useEffect","getFieldsValue","columnsList","list","c","unshift","current","Page","defaultActiveKey","header","extra","stopPropagation","some","i","includes","htmlType","style","direction","rowKey","dataSource","pagination","filters","sorter","scroll","y","total","put","post","footer","indexOf","Error","delete","sendingProp","Paragraph","Typography","message","enabelCopy","parseFloat","nationalCode","personelId","email","mobile","phone","ip","postalCode"],"sourceRoot":""}