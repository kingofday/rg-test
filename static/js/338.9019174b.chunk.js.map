{"version":3,"file":"static/js/338.9019174b.chunk.js","mappings":"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","sources":["components/panel/shared/CustomDatePicker.tsx","components/panel/shared/DatePickerFormItem.tsx","components/panel/shared/InputNumberFormItem.tsx","components/panel/shared/StepperForm.tsx","hooks/waterPermit/usePondWaterColumns.tsx","hooks/waterPermit/useSpringWaterColumns.tsx","components/panel/waterPermit/shared/SimilarRecords.tsx","hooks/waterPermit/useSurfaceWaterColumns.tsx","hooks/waterPermit/useWellWaterColumns.tsx","models/index.ts","models/pondWater.ts","models/springWater.ts"],"sourcesContent":["import { AnPicker } from \"react-anpicker\";\r\nimport faLocale from \"react-anpicker/dist/esm/components/Locales/faLocale\";\r\nimport \"react-anpicker/dist/anpicker.css\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { Button, Input, InputRef } from \"antd\";\r\nimport CustomIcon from \"components/shared/CustomIcon\";\r\nimport { ICustomDatePickerProps } from \"models\";\r\nconst eqValue = (value: string) => {\r\n  let dt = new Date(value);\r\n  let faVal = new Intl.DateTimeFormat(\"fa-IR\").format(dt);\r\n  let arr = faVal.split(\"/\");\r\n  return `${faLocale.numberConverter(arr[0])}/${faLocale.numberConverter(\r\n    arr[1]\r\n  )}/${faLocale.numberConverter(arr[2])}`;\r\n};\r\nconst CustomDatePicker = ({\r\n  placeholder,\r\n  popupTargetId,\r\n  value,\r\n  onRemove,\r\n  onChange,\r\n  endTime,\r\n  disabled,\r\n  readOnly\r\n}: ICustomDatePickerProps) => {\r\n  const ref = useRef<InputRef>(null);\r\n  const [innerValue, setValue] = useState<string>(() => {\r\n    if (value) {\r\n      return eqValue(value);\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n  const handleFocus = () => ref.current?.focus();\r\n  const handleChange = (dt: string) => {\r\n    if (dt) {\r\n      const [y, m, d] = dt.split(\"/\");\r\n      const res = faLocale.convertToDate(parseInt(y), parseInt(m), parseInt(d));\r\n      const newDT = endTime\r\n        ? new Date(res[0], res[1] - 1, res[2], 23, 59, 59, 0)\r\n        : new Date(res[0], res[1] - 1, res[2], 0, 0, 0, 0);\r\n      onChange?.(newDT.toISOString() ?? null);\r\n    } else {\r\n      onChange?.(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (typeof value !== \"undefined\") {\r\n      const v = eqValue(value);\r\n      if (\r\n        (value == null && innerValue !== null) ||\r\n        (innerValue === null && value !== null) ||\r\n        v !== innerValue\r\n      ) {\r\n        setValue(v);\r\n      }\r\n    }\r\n  }, [value]);\r\n  return (\r\n    <AnPicker\r\n      showSidebar={false}\r\n      inputControl={(props) => (\r\n        <Input\r\n          ref={ref}\r\n          readOnly={readOnly}\r\n          suffix={\r\n            onRemove && value ? (\r\n              <Button type=\"link\" onClick={() => onRemove()}>\r\n                <CustomIcon size={16} name=\"IoCloseOutline\" />{\" \"}\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"link\" onClick={handleFocus}>\r\n                <CustomIcon size={16} name=\"IoCalendarClearOutline\" />\r\n              </Button>\r\n            )\r\n          }\r\n          disabled={disabled}\r\n          placeholder={placeholder}\r\n          {...props}\r\n        />\r\n      )}\r\n      popupTargetId={popupTargetId}\r\n      onChange={handleChange}\r\n      value={innerValue}\r\n    />\r\n  );\r\n};\r\nexport default CustomDatePicker;\r\n","import { Form as AntdForm } from \"antd\";\r\nimport { Rule } from \"antd/es/form\";\r\nimport { ICustomDatePickerProps } from \"models\";\r\nimport CustomDatePicker from \"./CustomDatePicker\";\r\ninterface IDatePickerFormItem extends ICustomDatePickerProps {\r\n  form?: any;\r\n  name: string | string[];\r\n  rules?: Rule[];\r\n  label?: string;\r\n  readOnly?:boolean\r\n}\r\nconst DatePickerFormItem = (props: IDatePickerFormItem) => {\r\n  const Form = props.form || AntdForm;\r\n  return (\r\n    <Form.Item className=\"date-picker-form-item\" name={props.name} rules={props.rules} label={props.label}>\r\n      <CustomDatePicker {...props} />\r\n    </Form.Item>\r\n  );\r\n};\r\nexport default DatePickerFormItem;\r\n","import { InputNumber, Form as AntdForm } from \"antd\";\r\nimport { Rule } from \"antd/es/form\";\r\nimport { NamePath } from \"antd/es/form/interface\";\r\ninterface IInputNumberFormItem {\r\n  form?: any;\r\n  name: NamePath;\r\n  rules?: Rule[];\r\n  label?: string;\r\n  stringMode?: boolean;\r\n  id?: string;\r\n  className?: string;\r\n  placeholder?: string;\r\n  readOnly?:boolean;\r\n  disabled?:boolean;\r\n  [key: string]: any;\r\n}\r\nconst InputNumberFormItem = ({\r\n  form,\r\n  name,\r\n  rules,\r\n  label,\r\n  stringMode,\r\n  id,\r\n  className,\r\n  placeholder,\r\n  readOnly,\r\n  disabled,\r\n  ...rest\r\n}: IInputNumberFormItem) => {\r\n  const Form = form || AntdForm;\r\n  return (\r\n    <Form.Item\r\n      className={className}\r\n      name={name}\r\n      rules={rules}\r\n      label={label}\r\n      id={id}\r\n      {...rest}\r\n    >\r\n      <InputNumber\r\n        stringMode={stringMode ?? false}\r\n        formatter={(value) => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        parser={(value) => value!.replace(/\\$\\s?|(,*)/g, \"\")}\r\n        placeholder={placeholder}\r\n        className={`ltr-elm placeholder-r w-100 ${className}`}\r\n        controls={false}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\nexport default InputNumberFormItem;\r\n","import { Alert, Button, Col, Form, Input, Row, Steps } from \"antd\";\r\nimport config from \"config\";\r\nimport useApi from \"hooks/useApi\";\r\nimport { ElementType, MouseEvent, useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface IStepperForm<T> {\r\n  frmName: string;\r\n  data?: T;\r\n  initialValues?: any;\r\n  onCancel: () => void;\r\n  onSuccess?: (item: T, closeModal: boolean) => void;\r\n  readOnly?: boolean;\r\n  addUrl: string;\r\n  updateUrl: string;\r\n  findUrl: any;\r\n  hiddenInputs?: string[];\r\n  steps: {\r\n    title: string;\r\n    id: string;\r\n    content: ElementType;\r\n    destroyOnHide?: boolean;\r\n  }[];\r\n}\r\nconst StepperForm = <T,>(props: IStepperForm<T>) => {\r\n  const { t } = useTranslation();\r\n  const [entryFrm] = Form.useForm();\r\n  const [step, setStep] = useState(0);\r\n  const [errors, setError] = useState<string[]>([]);\r\n  const isMobile = useMemo(() => window.outerWidth < config.breakpoints.xl, []);\r\n  const [addOrUpdate, loading, addResponse] = useApi<any>({\r\n    onSuccess(res) {\r\n      props.onSuccess?.(res as T, false);\r\n      setStep((s) => s + 1);\r\n    },\r\n  });\r\n  const [find, finding] = useApi({\r\n    autoCallUrl: props.data\r\n      ? props.findUrl(props.data[\"id\" as keyof T])\r\n      : undefined,\r\n    onSuccess(res) {\r\n      const data = res as any;\r\n      if (data) {\r\n        entryFrm.setFieldsValue(data);\r\n      }\r\n    },\r\n  });\r\n  const handleSubmit = (values: any) => {\r\n    const frmData = values;\r\n    if (!props.data) addOrUpdate.post(props.addUrl, frmData);\r\n    else addOrUpdate.put(props.updateUrl, frmData);\r\n  };\r\n  const handleFailed = (err: any) => {\r\n    setError(\r\n      err.errorFields.map(\r\n        (x: any) =>\r\n          `\"${t(x.name[x.name.length - 1].replace(\"Id\", \"\"))}\" ${x.errors[0]}`\r\n      )\r\n    );\r\n  };\r\n  const back = () => {\r\n    setStep((s) => s - 1);\r\n  };\r\n  const next = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setStep((s) => s + 1);\r\n    setError([]);\r\n    const elm = document.getElementsByClassName(\"ant-modal-wrap\")[0];\r\n    elm.scrollTop = 0;\r\n  };\r\n  return (\r\n    <Form\r\n      id={props.frmName}\r\n      key={props.frmName}\r\n      form={entryFrm}\r\n      layout=\"vertical\"\r\n      initialValues={(props.data as any) ?? props.initialValues}\r\n      onFinish={handleSubmit}\r\n      onFinishFailed={handleFailed}\r\n      autoComplete=\"off\"\r\n      disabled={finding}\r\n    >\r\n      <Row gutter={[0, 20]}>\r\n        {finding && (\r\n          <Col xs={24} sm={24}>\r\n            <Alert type=\"info\" message={`${t(\"loading\")}...`} />\r\n          </Col>\r\n        )}\r\n        {props.data && (\r\n          <>\r\n            {props.hiddenInputs?.map((name) => (\r\n              <Form.Item key={name} noStyle name={name}>\r\n                <Input type=\"hidden\" />\r\n              </Form.Item>\r\n            ))}\r\n          </>\r\n        )}\r\n        {!isMobile && (\r\n          <Col xs={24} sm={24}>\r\n            <Steps\r\n              responsive={false}\r\n              size=\"small\"\r\n              current={step}\r\n              items={props.steps.map((x) => ({\r\n                ...x,\r\n                id: `${x.id}-step`,\r\n              }))}\r\n            />\r\n          </Col>\r\n        )}\r\n\r\n        {!!errors.length && (\r\n          <Col xs={24} sm={24}>\r\n            <Alert\r\n              type=\"error\"\r\n              message={errors.map((err, idx) => (\r\n                <p key={idx}>{err}</p>\r\n              ))}\r\n            />\r\n          </Col>\r\n        )}\r\n\r\n        <Col xs={24} sm={24}>\r\n          {props.steps.map((x, idx) => {\r\n            return x.destroyOnHide && step !== idx ? null : (\r\n              <div\r\n                className=\"step-content\"\r\n                id={x.id}\r\n                style={{\r\n                  display: step === idx ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                }}\r\n                key={x.id}\r\n              >\r\n                <Row gutter={10}>\r\n                  <x.content\r\n                    data={addResponse ?? props.data}\r\n                    entryFrm={entryFrm}\r\n                    readOnly={props.readOnly}\r\n                    initialValues={props.initialValues}\r\n                  />\r\n                </Row>\r\n              </div>\r\n            );\r\n          })}\r\n        </Col>\r\n        <Col xs={24} sm={24}>\r\n          <div\r\n            className=\"actions\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {(() => {\r\n              switch (step) {\r\n                case props.steps.length - 1:\r\n                  return (\r\n                    <>\r\n                      <Button\r\n                        loading={props.data ? finding : false}\r\n                        onClick={back}\r\n                      >\r\n                        {t(\"prev\")}\r\n                      </Button>\r\n                      {props.readOnly ? (\r\n                        <Button\r\n                          loading={props.data ? finding : false}\r\n                          onClick={back}\r\n                        >\r\n                          {t(\"prev\")}\r\n                        </Button>\r\n                      ) : (\r\n                        <span></span>\r\n                      )}\r\n                      {isMobile && (\r\n                        <span>\r\n                          {step + 1}/{props.steps.length}\r\n                        </span>\r\n                      )}\r\n                      <Button\r\n                        htmlType={\"button\"}\r\n                        type=\"primary\"\r\n                        danger\r\n                        onClick={props.onCancel}\r\n                      >\r\n                        {t(\"close\")}\r\n                      </Button>\r\n                    </>\r\n                  );\r\n                case props.steps.length - 2:\r\n                  return (\r\n                    <>\r\n                      <Button\r\n                        loading={props.data ? finding : false}\r\n                        onClick={back}\r\n                      >\r\n                        {t(\"prev\")}\r\n                      </Button>\r\n                      {isMobile && (\r\n                        <span>\r\n                          {step + 1}/{props.steps.length}\r\n                        </span>\r\n                      )}\r\n                      <Button\r\n                        htmlType={props.readOnly ? \"button\" : \"submit\"}\r\n                        type=\"primary\"\r\n                        disabled={finding || loading}\r\n                        loading={loading}\r\n                        onClick={props.readOnly ? next : undefined}\r\n                      >\r\n                        {t(props.readOnly ? \"next\" : \"submit\")}\r\n                      </Button>\r\n                    </>\r\n                  );\r\n                default:\r\n                  return (\r\n                    <>\r\n                      <Button\r\n                        disabled={step === 0}\r\n                        loading={props.data ? finding : false}\r\n                        onClick={back}\r\n                      >\r\n                        {t(\"prev\")}\r\n                      </Button>\r\n                      {isMobile && (\r\n                        <span>\r\n                          {step + 1}/{props.steps.length}\r\n                        </span>\r\n                      )}\r\n                      <Button\r\n                        htmlType={\"button\"}\r\n                        type=\"primary\"\r\n                        onClick={next}\r\n                        disabled={finding}\r\n                      >\r\n                        {t(\"next\")}\r\n                      </Button>\r\n                    </>\r\n                  );\r\n              }\r\n            })()}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\nexport default StepperForm;\r\n","import { ColumnsType } from \"antd/es/table\";\r\nimport utils from \"config/utils\";\r\nimport { PondRefillTypeEnum, TPondWaterSummary } from \"models/pondWater\";\r\nimport { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst usePondWaterColumns = () => {\r\n  const { t } = useTranslation();\r\n  return useMemo(\r\n    () =>\r\n      [\r\n        {\r\n          title: `${t(\"fullName\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"fullName\",\r\n          key: \"fullName\",\r\n          fixed: \"left\",\r\n          render: function (text, record, index) {\r\n            return (\r\n              <span>{`${record?.waterUserProfile?.firstName} ${record.waterUserProfile?.lastName}`}</span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"nationalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"nationalCode\",\r\n          key: \"nationalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record?.waterUserProfile?.nationalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"postalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"postalCode\",\r\n          key: \"postalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record?.waterUserProfile?.postalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"phoneNumber\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"phoneNumber\",\r\n          key: \"phoneNumber\",\r\n          render: function (text, record, index) {\r\n            return <span>{record?.waterUserProfile?.phoneNumber}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: t(\"refillType\"),\r\n          dataIndex: \"pondRefillType\",\r\n          key: \"pondRefillType\",\r\n          render(value, record, index) {\r\n            return (\r\n              <span>\r\n                {utils.getEnumDescripion(PondRefillTypeEnum, record.pondRefillType)}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: t(\"dedicateType\"),\r\n          dataIndex: \"pondDedicateType\",\r\n          key: \"pondDedicateType\",\r\n          render(value, record, index) {\r\n            return (\r\n              <span>\r\n                {utils.getEnumDescripion(PondRefillTypeEnum, record.pondDedicateType)}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n      ] as ColumnsType<TPondWaterSummary>,\r\n    []\r\n  );\r\n};\r\nexport default usePondWaterColumns;\r\n","import { ColumnsType } from \"antd/es/table\";\r\nimport NumberCell from \"components/panel/shared/cells/NumberCell\";\r\nimport utils from \"config/utils\";\r\nimport {\r\n  SpringTypeEnum,\r\n  TSpringWaterUsageVolume,\r\n  TSprintWaterSummary,\r\n} from \"models/springWater\";\r\nimport { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useSpringWaterColumns = () => {\r\n  const { t } = useTranslation();\r\n  return useMemo(\r\n    () =>\r\n      [\r\n        {\r\n          title: t(\"springName\"),\r\n          dataIndex: \"springName\",\r\n          key: \"springName\",\r\n        },\r\n        {\r\n          title: t(\"springType\"),\r\n          dataIndex: \"springType\",\r\n          key: \"springType\",\r\n          render(value, record, index) {\r\n            return (\r\n              <span>\r\n                {utils.getEnumDescripion(SpringTypeEnum, record.springType)}\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"fullName\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"fullName\",\r\n          key: \"fullName\",\r\n          fixed: \"left\",\r\n          render: function (text, record, index) {\r\n            return (\r\n              <span>{`${record.waterUserProfile?.firstName} ${record.waterUserProfile?.lastName}`}</span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"nationalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"nationalCode\",\r\n          key: \"nationalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile?.nationalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"postalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"postalCode\",\r\n          key: \"postalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile?.postalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"phoneNumber\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"phoneNumber\",\r\n          key: \"phoneNumber\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile?.phoneNumber}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: t(\"totalLandArea\"),\r\n          dataIndex: \"totalLandArea\",\r\n          key: \"totalLandArea\",\r\n          render: (text) => <NumberCell value={text} />,\r\n        },\r\n        {\r\n          title: t(\"areaOfAgriculturalLands\"),\r\n          dataIndex: \"areaOfAgriculturalLands\",\r\n          key: \"areaOfAgriculturalLands\",\r\n          render: (text) => <NumberCell value={text} />,\r\n        },\r\n      ] as ColumnsType<TSprintWaterSummary>,\r\n    []\r\n  );\r\n};\r\nexport default useSpringWaterColumns;\r\n","import { Col, Divider, Row, Spin, Table } from \"antd\";\r\nimport addreses from \"config/api/addresses\";\r\nimport useApi from \"hooks/useApi\";\r\nimport usePondWaterColumns from \"hooks/waterPermit/usePondWaterColumns\";\r\nimport useSpringWaterColumns from \"hooks/waterPermit/useSpringWaterColumns\";\r\nimport useSurfaceWaterColumns from \"hooks/waterPermit/useSurfaceWaterColumns\";\r\nimport useWellWaterColumns from \"hooks/waterPermit/useWellWaterColumns\";\r\nimport { TSimilarRecords } from \"models/waterPermitSimilars\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst SimilarRecords = ({ data }: { data: any }) => {\r\n  const [_, loading, records] = useApi<TSimilarRecords>({\r\n    autoCallUrl: addreses.waterPermit.similarRecords({\r\n      id: data.id,\r\n      ...data.waterUserProfile,\r\n    }),\r\n  });\r\n  const { t } = useTranslation();\r\n  const surfaceColumns = useSurfaceWaterColumns();\r\n  const wellColumns = useWellWaterColumns();\r\n  const springColumns = useSpringWaterColumns();\r\n  const pondColumns = usePondWaterColumns();\r\n  return (\r\n    <Row className=\"w-100\">\r\n      <Col xs={24} sm={24}>\r\n        <Divider orientation=\"left\">{t(\"similarRecords\")}</Divider>\r\n      </Col>\r\n      <Col xs={24} sm={24}>\r\n        {loading ? (\r\n          <div className=\"center w-100\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Spin />\r\n          </div>\r\n        ) : (\r\n          Object.keys(records ?? {}).map((key) => {\r\n            let columns: any[] = [];\r\n            let title: string = \"\";\r\n            switch (key as keyof TSimilarRecords) {\r\n              case \"surfaceWaterViewModel\":\r\n                columns = surfaceColumns;\r\n                title = t(\"surcafeWaterPermits\");\r\n                break;\r\n              case \"wellViewModel\":\r\n                columns = wellColumns;\r\n                title = t(\"wellWaterPermits\");\r\n                break;\r\n              case \"pondViewModel\":\r\n                columns = pondColumns;\r\n                title = t(\"pondWaterPermits\");\r\n                break;\r\n              case \"springViewModel\":\r\n                columns = springColumns;\r\n                title = t(\"springWaterPermits\");\r\n                break;\r\n            }\r\n            const dataSource =\r\n              (records?.[key as keyof TSimilarRecords] as any[]) ?? [];\r\n            if (!dataSource.length) return null;\r\n            return (\r\n              <div\r\n                className=\"w-100\"\r\n                style={{ maxWidth: \"100%\", overflowX: \"auto\" }}\r\n              >\r\n                <Table\r\n                  key={key}\r\n                  style={{ width: \"100%\" }}\r\n                  pagination={false}\r\n                  dataSource={dataSource}\r\n                  columns={[\r\n                    {\r\n                      title,\r\n                      children: columns,\r\n                    },\r\n                  ]}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default SimilarRecords;\r\n","import { ColumnsType } from \"antd/es/table\";\r\nimport NumberCell from \"components/panel/shared/cells/NumberCell\";\r\nimport { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useSurfaceWaterColumns = () => {\r\n  const { t } = useTranslation();\r\n  return useMemo(\r\n    () =>\r\n      [\r\n        {\r\n          title: `${t(\"fullName\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"fullName\",\r\n          key: \"fullName\",\r\n          fixed: \"left\",\r\n          render: function (text, record, index) {\r\n            return (\r\n              <span>{`${record.waterUserProfile.firstName} ${record.waterUserProfile.lastName}`}</span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"nationalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"nationalCode\",\r\n          key: \"nationalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile.nationalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"postalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"postalCode\",\r\n          key: \"postalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile.postalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"phoneNumber\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"phoneNumber\",\r\n          key: \"phoneNumber\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile.phoneNumber}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: t(\"totalLandArea\"),\r\n          dataIndex: \"totalLandArea\",\r\n          key: \"totalLandArea\",\r\n          render: (text) => <NumberCell value={text} />,\r\n        },\r\n        {\r\n          title: t(\"areaOfAgriculturalLands\"),\r\n          dataIndex: \"areaOfAgriculturalLands\",\r\n          key: \"areaOfAgriculturalLands\",\r\n          render: (text) => <NumberCell value={text} />,\r\n        }\r\n      ] as ColumnsType<any>,\r\n    []\r\n  );\r\n};\r\nexport default useSurfaceWaterColumns;\r\n","import { ColumnsType } from \"antd/es/table\";\r\nimport NumberCell from \"components/panel/shared/cells/NumberCell\";\r\nimport { TWellWaterSummary } from \"models/wellWater\";\r\nimport { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useWellWaterColumns = () => {\r\n  const { t } = useTranslation();\r\n  return useMemo(\r\n    () =>\r\n      [\r\n        {\r\n          title: `${t(\"fullName\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"fullName\",\r\n          key: \"fullName\",\r\n          fixed: \"left\",\r\n          render: function (text, record, index) {\r\n            return (\r\n              <span>{`${record.waterUserProfile.firstName} ${record.waterUserProfile.lastName}`}</span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"nationalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"nationalCode\",\r\n          key: \"nationalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile.nationalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"postalCode\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"postalCode\",\r\n          key: \"postalCode\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile.postalCode}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: `${t(\"phoneNumber\")} ${t(\"permitOwner\")}`,\r\n          dataIndex: \"phoneNumber\",\r\n          key: \"phoneNumber\",\r\n          render: function (text, record, index) {\r\n            return <span>{record.waterUserProfile.phoneNumber}</span>;\r\n          },\r\n        },\r\n        {\r\n          title: t(\"totalLandArea\"),\r\n          dataIndex: \"totalArea\",\r\n          key: \"totalArea\",\r\n          render: (text) => <NumberCell value={text} />,\r\n        },\r\n        {\r\n          title: t(\"areaOfAgriculturalLands\"),\r\n          dataIndex: \"areaOfDrinkingLands\",\r\n          key: \"areaOfDrinkingLands\",\r\n          render: (text) => <NumberCell value={text} />,\r\n        }\r\n      ] as ColumnsType<TWellWaterSummary>,\r\n    []\r\n  );\r\n};\r\nexport default useWellWaterColumns;\r\n","import type { ItemType } from \"antd/es/menu/hooks/useItems\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\nexport type TResponse<T> = {\r\n  succeeded: boolean;\r\n  messages: any[];\r\n  result: T;\r\n  exception: number;\r\n};\r\nexport type TUser = {\r\n  fullName: string;\r\n  nationalCode: string;\r\n  phoneNumber: string;\r\n  personnelId?: string;\r\n  baseSalary?: string;\r\n  emailAddress?: string;\r\n  countyId?: number;\r\n  districtId?: number;\r\n  cityId?: number;\r\n  ruralDistrictId?: number;\r\n  villageId?: number;\r\n};\r\nexport enum MenuTypes {\r\n  //[Display(Name = \"مدیریت تنظیمات\")]\r\n  SettingManager = \"SettingManager\",\r\n  //[Display(Name = \"مدیریت کاربران\")]\r\n  UserManager = \"UserManager\",\r\n  //[Display(Name = \"مدیریت نقش‌ها\")]\r\n  RoleManager = \"RoleManager\",\r\n  //[Display(Name = \"مدیریت سطح سازمانی\")]\r\n  OrganizationLevelManager = \"OrganizationLevelManager\",\r\n  //[Display(Name = \"مدیریت مجوز بهره برداری\")]\r\n  PondPermitManager = \"PondPermitManager\",\r\n  SurfaceWaterPermitManager = \"SurfaceWaterPermitManager\",\r\n  SpringPermitManager = \"SpringPermitManager\",\r\n  WellPermitManager = \"WellPermitManager\",\r\n  DeveloperSupport = \"DeveloperSupport\",\r\n}\r\nexport type TMenu = ItemType & {\r\n  path?: string;\r\n};\r\nexport type TTheme = \"dark\" | \"light\";\r\nexport type TSharedContext = {\r\n  theme: TTheme;\r\n  title: string;\r\n  defaultPath: string;\r\n  user: TUser | null;\r\n  accessToken: string;\r\n  refreshToken?: string;\r\n  menues: MenuTypes[];\r\n  isDrawerOpen: boolean;\r\n  setTitle: (title: string) => void;\r\n  setTheme: (thm: TTheme) => void;\r\n  setMenues: (menues: MenuTypes[]) => void;\r\n  setUser: (user: TUser) => void;\r\n  setToken: (token: string, refreshToken?: string) => void;\r\n  logout: () => void;\r\n  toggleDrawer: (isOpen: boolean) => void;\r\n};\r\nexport type PagedData<T> = {\r\n  results: T[];\r\n  page: number;\r\n  pageSize: number;\r\n  totalPagesCount: number;\r\n  totalEntitiesCount: number;\r\n};\r\nexport type TooltipItem = {\r\n  value?: string | number | null;\r\n  name?: string;\r\n  color?: string;\r\n  colorForValue?: boolean;\r\n  divider?: boolean;\r\n  redGreenMode?: boolean;\r\n  formatValue?: boolean;\r\n  dir?: \"rtl\" | \"ltr\";\r\n  prefix?: string;\r\n  suffix?: string;\r\n};\r\nexport type PagedListUpdater<T> = Dispatch<SetStateAction<PagedData<T> | null>>;\r\nexport type Updater<T> = Dispatch<SetStateAction<PagedData<T> | T[] | null>>;\r\nexport type Dictionary = { [key: string]: string };\r\nexport type TLocation = {\r\n  id: number;\r\n  name: string;\r\n};\r\nexport enum PersianMonthesEnum {\r\n  farvardin = \"0\",\r\n  ordibehesht = \"1\",\r\n  khordad = \"2\",\r\n  tir = \"3\",\r\n  mordad = \"4\",\r\n  shahrivar = \"5\",\r\n  mehr = \"6\",\r\n  aban = \"7\",\r\n  azar = \"8\",\r\n  dey = \"9\",\r\n  bahman = \"10\",\r\n  esfand = \"11\",\r\n}\r\nexport interface ICustomDatePickerProps {\r\n  onChange?: (date: string | null) => void;\r\n  value?: string;\r\n  placeholder?: string;\r\n  popupTargetId?: string;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  hasError?: boolean;\r\n  onRemove?: () => void;\r\n  endTime?: boolean;\r\n  readOnly?: boolean;\r\n}\r\nexport interface IStepContent {\r\n  entryFrm: any;\r\n  readOnly?: boolean;\r\n  data: any;\r\n  initialValues: any;\r\n}\r\n","import {\r\n  EngineTypeEnum,\r\n  IrrigationNetworkTypeEnum,\r\n  TCropsPercentageViewModel,\r\n  TSourceLocation,\r\n  TUserProfile,\r\n} from \"./waterPermit\";\r\n\r\nexport enum PondRefillTypeEnum {\r\n  gravityEngine = 0, // ثقلی\r\n  pumpingEngine = 1, // پمپاژی\r\n}\r\nexport enum PondUsageVolumeTypeEnum {\r\n  agriculture = 0, // کشاورزی\r\n  other = 1, // سایر\r\n}\r\nexport enum PondDedicateTypeEnum {\r\n  regulatedFlow = 0,\r\n  naturalFlow = 1,\r\n  combinationOfRegulatedAndNaturalFlow = 2,\r\n}\r\nexport type TPondWaterUsageVolume = {\r\n  id: string | null;\r\n  surfaceWaterPermitId: string;\r\n  name: string;\r\n  workHours: number;\r\n  cubicMeters: number;\r\n  month: string;\r\n  waterFlow: number;\r\n  pondUsageVolumeType: PondUsageVolumeTypeEnum;\r\n};\r\n\r\nexport type TPondWaterSummary = {\r\n  id: string | null;\r\n  engineType: EngineTypeEnum;\r\n  enginePower: number;\r\n  pondRefillType: PondRefillTypeEnum;\r\n  sourceLocation: TSourceLocation | null;\r\n  sourceLocationId: string | null;\r\n  waterMeasuringInstrumentDeliveredId: string | null;\r\n  waterUserProfile: TUserProfile | null;\r\n  pondUsageVolume: TPondWaterUsageVolume[] | null;\r\n  damTank: number;\r\n  creek: number;\r\n  river: number;\r\n  irrigationAndDrainageNetwork: number;\r\n  mainChannel: number;\r\n  secondChannel: number;\r\n  thirdChannel: number;\r\n  gate: number;\r\n  irrigationNetworkType: IrrigationNetworkTypeEnum;\r\n  waterDrain: number;\r\n  aqueduct: number;\r\n  altitude: number;\r\n  lat: number;\r\n  long: number;\r\n  deliverPointAltitude: number;\r\n  deliverPointLat: number;\r\n  deliverPointLong: number;\r\n  area: number;\r\n  depth: number;\r\n  waterIntakeVolume: number;\r\n  fromNorthTo: string;\r\n  fromEastTo: string;\r\n  fromWestTo: string;\r\n  fromSouthTo: string;\r\n  areaOfAgriculturalLands: number;\r\n  cropsUnderCultivationPercentage: TCropsPercentageViewModel[] | null;\r\n  pondDedicateType: PondDedicateTypeEnum;\r\n  nonAgriculturalSeasonFromMonth: number;\r\n  nonAgriculturalSeasonToMonth: number;\r\n  workHours: number;\r\n  deliveredWaterFlow: number;\r\n  deliveredVolume: number;\r\n  deliveredTimeFromMonth: number;\r\n  deliveredTimeToMonth: number;\r\n  measuringInstrumentName: string | null;\r\n};\r\n","import {\r\n  TCropsPercentageViewModel,\r\n  TSourceLocation,\r\n  TUserProfile,\r\n} from \"./waterPermit\";\r\nexport enum SpringUsageVolumeTypeEnum {\r\n  agriculture = 0, // کشاورزی\r\n  drinking = 1, // شرب و بهداشت\r\n  industry = 2, // صنعت\r\n  other = 3, // سایر\r\n}\r\nexport enum SpringTypeEnum {\r\n  hardBuild = 0,\r\n  alluvium = 1,\r\n}\r\nexport type TSpringWaterUsageVolume = {\r\n  id: string | null;\r\n  name: string;\r\n  workHours: number;\r\n  cubicMeters: number;\r\n  month: string;\r\n  waterFlow: number;\r\n  springUsageVolumeType: SpringUsageVolumeTypeEnum;\r\n};\r\nexport type TSprintWaterSummary = {\r\n  id: string;\r\n  sourceLocation: TSourceLocation;\r\n  sourceLocationId: string;\r\n  waterMeasuringInstrumentDeliveredId: string;\r\n  waterUserProfile: TUserProfile | null;\r\n  springUsageVolume: TSpringWaterUsageVolume[];\r\n  altitude: number;\r\n  lat: number;\r\n  long: number;\r\n  usingPointAltitude: number;\r\n  usingPointLat: number;\r\n  usingPointLong: number;\r\n  fromNorthTo: string;\r\n  fromEastTo: string;\r\n  fromWestTo: string;\r\n  fromSouthTo: string;\r\n  areaOfAgriculturalLands: number;\r\n  cropsUnderCultivationPercentage: TCropsPercentageViewModel[] | null;\r\n  totalLandArea: number;\r\n  isPumping: boolean;\r\n  isGravityEngine: boolean;\r\n  pumpingEngineType: number;\r\n  diesel: number;\r\n  pumpEnginePower: number;\r\n  measuringInstrumentName: string;\r\n  electroPumpPower: number;\r\n  electric: number;\r\n  springName: string | null;\r\n  springType: SpringTypeEnum;\r\n};\r\n"],"names":["eqValue","value","dt","Date","arr","Intl","DateTimeFormat","format","split","faLocale","placeholder","popupTargetId","onRemove","onChange","endTime","disabled","readOnly","ref","useRef","useState","innerValue","setValue","handleFocus","current","focus","useEffect","v","showSidebar","inputControl","props","suffix","type","onClick","CustomIcon","size","name","y","m","d","res","parseInt","newDT","toISOString","Form","form","AntdForm","Item","className","rules","label","stringMode","id","rest","formatter","replace","parser","controls","t","useTranslation","entryFrm","step","setStep","errors","setError","isMobile","useMemo","window","outerWidth","config","useApi","onSuccess","s","addOrUpdate","loading","addResponse","autoCallUrl","data","findUrl","undefined","setFieldsValue","finding","back","next","e","stopPropagation","preventDefault","document","getElementsByClassName","scrollTop","frmName","layout","initialValues","onFinish","values","frmData","put","updateUrl","post","addUrl","onFinishFailed","err","errorFields","map","x","length","autoComplete","gutter","xs","sm","message","hiddenInputs","noStyle","responsive","items","steps","idx","destroyOnHide","style","display","position","content","justifyContent","alignItems","htmlType","danger","onCancel","title","dataIndex","key","fixed","render","text","record","index","waterUserProfile","firstName","lastName","nationalCode","postalCode","phoneNumber","utils","PondRefillTypeEnum","pondRefillType","pondDedicateType","SpringTypeEnum","springType","NumberCell","addreses","records","surfaceColumns","useSurfaceWaterColumns","wellColumns","useWellWaterColumns","springColumns","useSpringWaterColumns","pondColumns","usePondWaterColumns","orientation","Object","keys","columns","dataSource","maxWidth","overflowX","width","pagination","children","MenuTypes","PersianMonthesEnum","PondUsageVolumeTypeEnum","PondDedicateTypeEnum","SpringUsageVolumeTypeEnum"],"sourceRoot":""}