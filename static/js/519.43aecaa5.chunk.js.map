{"version":3,"file":"static/js/519.43aecaa5.chunk.js","mappings":"uNA4CA,UAlCe,SAAH,GAAuD,IAAD,IAAhDA,UAAAA,OAAS,OAAO,EACxBC,GAAMC,EAAAA,EAAAA,KAAND,EAER,IADYE,EAAAA,EAAAA,OAC2BC,EAAAA,EAAAA,YAAWC,EAAAA,IAA1CC,EAAQ,EAARA,SAASC,EAAO,EAAPA,QAAQC,EAAS,EAATA,UAwBzB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAKT,EAAW,CACd,IAAMU,EAAOC,EAAAA,EAAAA,cAAoBC,EAAAA,EAAAA,MAC3BC,EAASF,EAAAA,EAAAA,cAAoBC,EAAAA,EAAAA,OAC7BE,EAAQH,EAAAA,EAAAA,cAAoBC,EAAAA,EAAAA,OAE9BF,GAAQG,GAAUC,GACpBN,EAAUK,GACVP,EAASQ,GACTP,EAAQG,KAGRC,EAAAA,EAAAA,eACAI,OAAOC,KAAKC,EAAAA,EAAAA,OAEhB,CACF,GAAG,KAED,iBAAKC,GAAG,SAAQ,WACd,wBAAKjB,EAAE,cACP,SAAC,IAAI,MAGX,C,qJCoBA,UArDa,WACX,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACJa,EAAQK,EAAAA,EAAAA,cAAmBP,EAAAA,EAAAA,OAC/B,GAAyBR,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BK,EAAI,EAAJA,KAAKU,EAAW,EAAXA,YACNC,GAAWC,EAAAA,EAAAA,MAIjB,OAAIZ,GAEA,SAAC,KAAQ,CACPa,GAAe,OAAXH,QAAW,IAAXA,EAAAA,EAAeH,EAAAA,EAAAA,UACnBO,MAAO,CAAEC,KAAMJ,GACfK,SAAO,IAGJZ,GACA,SAAC,UAAM,CAACd,WAAW,KAG1B,gBAAKkB,GAAG,OAAM,UACZ,SAAC,IAAI,CAACS,UAAU,OAAM,UACpB,UAAC,IAAG,YACF,SAAC,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIF,UAAU,UAAS,UACtC,SAAC,KAAM,OAET,SAAC,IAAG,CAACC,GAAI,EAAGC,GAAI,GAAG,UACjB,gBAAKF,UAAU,QAAO,UACpB,iBAAKA,UAAU,QAAO,WACpB,eAAIA,UAAU,QAAO,SAAE1B,EAAE,cACzB,uBAAIA,EAAE,iCAsBtB,C","sources":["components/Splash.tsx","components/auth/index.tsx"],"sourcesContent":["import { Spin } from \"antd\";\r\nimport { navigateTo } from \"config/routes\";\r\nimport storageKeys from \"config/storageKeys\";\r\nimport utils from \"config/utils\";\r\nimport SharedContext from \"context/SharedContext\";\r\nimport { MenuTypes, TUser } from \"models\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Splash = ({ doNothing = true }: { doNothing?: boolean }) => {\r\n  const { t } = useTranslation();\r\n  const nav = useNavigate();\r\n  const { setToken,setUser,setMenues } = useContext(SharedContext);\r\n  // const [refreshUser] = useApi<TUser>({\r\n  //   onFailed: () => {\r\n  //     util.clearStorage();\r\n  //     nav(navigateTo.login);\r\n  //   }\r\n  // });\r\n  useEffect(() => {\r\n    if (!doNothing) {\r\n      const user = utils.getStoredData(storageKeys.user);\r\n      const menues = utils.getStoredData(storageKeys.menus);\r\n      const token = utils.getStoredData(storageKeys.token);\r\n      //const refToken = utils.getStoredData(storageKeys.refreshToken);\r\n      if (user && menues && token){\r\n        setMenues(menues as MenuTypes[]);\r\n        setToken(token as string);\r\n        setUser(user as TUser);\r\n      } \r\n      else {\r\n        utils.clearStorage();\r\n        window.open(navigateTo.login);\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <div id=\"splash\">\r\n      <h1>{t(\"loading\")}</h1>\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\nexport default Splash;\r\n","import { Card, Col, Row } from \"antd\";\r\nimport Splash from \"components/Splash\";\r\nimport { navigateTo } from \"config/routes\";\r\nimport storageKeys from \"config/storageKeys\";\r\nimport util from \"config/utils\";\r\nimport SharedContext from \"context/SharedContext\";\r\nimport { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Navigate, Outlet, useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst Auth = () => {\r\n  const { t } = useTranslation();\r\n  let token = util.getStoredData(storageKeys.token);\r\n  const {user,defaultPath}=useContext(SharedContext);\r\n  const location = useLocation();\r\n  // const handleClick = () => {\r\n  //   nav(`${inLogin ? navigateTo.signup : navigateTo.login}`);\r\n  // }\r\n  if (user)\r\n    return (\r\n      <Navigate\r\n        to={defaultPath ?? navigateTo.dashboard}\r\n        state={{ from: location }}\r\n        replace\r\n      />\r\n    );\r\n  else if (token) {\r\n    return <Splash doNothing={false} />;\r\n  }\r\n  return (\r\n    <div id=\"auth\">\r\n      <Card className=\"card\">\r\n        <Row>\r\n          <Col xs={24} sm={12} className=\"content\">\r\n            <Outlet />\r\n          </Col>\r\n          <Col xs={0} sm={12}>\r\n            <div className=\"slide\">\r\n              <div className=\"texts\">\r\n                <h1 className=\"title\">{t(\"appName\")}</h1>\r\n                <p>{t(\"appDescription\")}</p>\r\n              </div>\r\n             {/*  <div className=\"text-center\">\r\n                <Button size=\"large\" className=\"btn-nav\" onClick={handleClick}>\r\n                  {inLogin ? t(\"signup\") : t(\"login\")}\r\n                </Button>\r\n              </div>\r\n              <ul className=\"socials\">\r\n                {socials.map((x, idx) => (\r\n                  <li key={idx}>\r\n                    <a href={x.url} target=\"_blank\">\r\n                      <CustomIcon name={x.icon} size={20} />\r\n                    </a>\r\n                  </li>\r\n                ))}\r\n              </ul> */}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n"],"names":["doNothing","t","useTranslation","useNavigate","useContext","SharedContext","setToken","setUser","setMenues","useEffect","user","utils","storageKeys","menues","token","window","open","navigateTo","id","util","defaultPath","location","useLocation","to","state","from","replace","className","xs","sm"],"sourceRoot":""}